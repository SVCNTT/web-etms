(function(){String.prototype.contains=function(d,f){return-1!==this.indexOf(d,f)};String.prototype.flare=function(d){null==d&&(d="uiGmap");return d+this};String.prototype.ns=String.prototype.flare}).call(this);
(function(){_.intersectionObjects=function(d,f,e){null==e&&(e=void 0);d=_.map(d,function(b){return function(b){return _.find(f,function(h){return null!=e?e(b,h):_.isEqual(b,h)})}}(this));return _.filter(d,function(b){return null!=b})};_.containsObject=_.includeObject=function(d,f,e){null==e&&(e=void 0);return null===d?!1:_.any(d,function(b){return function(b){return null!=e?e(b,f):_.isEqual(b,f)}}(this))};_.differenceObjects=function(d,f,e){null==e&&(e=void 0);return _.filter(d,function(b){return!_.containsObject(f,
    b,e)})};_.withoutObjects=_.differenceObjects;_.indexOfObject=function(d,f,e,b){var c,h;if(null==d)return-1;c=0;h=d.length;if(b)if("number"===typeof b)c=0>b?Math.max(0,h+b):b;else return c=_.sortedIndex(d,f),d[c]===f?c:-1;for(;c<h;){if(null!=e){if(e(d[c],f))return c}else if(_.isEqual(d[c],f))return c;c++}return-1};_["extends"]=function(d){return _.reduce(d,function(d,e){return _.extend(d,e)},{})};_.isNullOrUndefined=function(d){return _.isNull(d||_.isUndefined(d))}}).call(this);
(function(){angular.module("google-maps.providers".ns(),[]);angular.module("google-maps.wrapped".ns(),[]);angular.module("google-maps.extensions".ns(),["google-maps.wrapped".ns(),"google-maps.providers".ns()]);angular.module("google-maps.directives.api.utils".ns(),["google-maps.extensions".ns()]);angular.module("google-maps.directives.api.managers".ns(),[]);angular.module("google-maps.directives.api.options".ns(),["google-maps.directives.api.utils".ns()]);angular.module("google-maps.directives.api.options.builders".ns(),
    []);angular.module("google-maps.directives.api.models.child".ns(),["google-maps.directives.api.utils".ns(),"google-maps.directives.api.options".ns(),"google-maps.directives.api.options.builders".ns()]);angular.module("google-maps.directives.api.models.parent".ns(),["google-maps.directives.api.managers".ns(),"google-maps.directives.api.models.child".ns(),"google-maps.providers".ns()]);angular.module("google-maps.directives.api".ns(),["google-maps.directives.api.models.parent".ns()]);angular.module("google-maps".ns(),
    ["google-maps.directives.api".ns(),"google-maps.providers".ns()]).factory("debounce".ns(),["$timeout",function(d){return function(f){var e;e=0;return function(){var b,c,h;h=this;b=arguments;e++;c=function(c){return function(){if(c===e)return f.apply(h,b)}}(e);return d(c,0,!0)}}}])}).call(this);
(function(){angular.module("google-maps.providers".ns()).factory("MapScriptLoader".ns(),["$q",function(d){return{load:function(f){var e,b,c;e=d.defer();if(angular.isDefined(window.google)&&angular.isDefined(window.google.maps))return e.resolve(window.google.maps),e.promise;b=f.callback="onGoogleMapsReady"+Math.round(1E3*Math.random());window[b]=function(){window[b]=null;e.resolve(window.google.maps)};f=_.map(f,function(b,c){return c+"="+b});f=f.join("&");c=document.createElement("script");c.type=
    "text/javascript";c.src="https://maps.googleapis.com/maps/api/js?"+f;document.body.appendChild(c);return e.promise}}}]).provider("GoogleMapApi".ns(),function(){this.options={v:"3.16",libraries:"places",language:"en",sensor:"false"};this.configure=function(d){angular.extend(this.options,d)};this.$get=["MapScriptLoader".ns(),function(d){return function(f){d.promise=f.load(d.options);return d.promise}}(this)];return this})}).call(this);
(function(){angular.module("google-maps.extensions".ns()).service("ExtendGWin".ns(),function(){return{init:_.once(function(){if(google||"undefined"!==typeof google&&null!==google&&google.maps||null!=google.maps.InfoWindow)if(google.maps.InfoWindow.prototype._open=google.maps.InfoWindow.prototype.open,google.maps.InfoWindow.prototype._close=google.maps.InfoWindow.prototype.close,google.maps.InfoWindow.prototype._isOpen=!1,google.maps.InfoWindow.prototype.open=function(d,f,e){null==e&&(this._isOpen=
        !0,this._open(d,f,!0))},google.maps.InfoWindow.prototype.close=function(d){null==d&&(this._isOpen=!1,this._close(!0))},google.maps.InfoWindow.prototype.isOpen=function(d){null==d&&(d=void 0);return null==d?this._isOpen:this._isOpen=d},window.InfoBox&&(window.InfoBox.prototype._open=window.InfoBox.prototype.open,window.InfoBox.prototype._close=window.InfoBox.prototype.close,window.InfoBox.prototype._isOpen=!1,window.InfoBox.prototype.open=function(d,f){this._isOpen=!0;this._open(d,f)},window.InfoBox.prototype.close=
        function(){this._isOpen=!1;this._close()},window.InfoBox.prototype.isOpen=function(d){null==d&&(d=void 0);return null==d?this._isOpen:this._isOpen=d}),window.MarkerLabel_)return window.MarkerLabel_.prototype.setContent=function(){var d;(d=this.marker_.get("labelContent"))&&!_.isEqual(this.oldContent,d)&&("undefined"===typeof(null!=d?d.nodeType:void 0)?(this.labelDiv_.innerHTML=d,this.eventDiv_.innerHTML=this.labelDiv_.innerHTML):(this.labelDiv_.innerHTML="",this.labelDiv_.appendChild(d),d=d.cloneNode(!0),
    this.eventDiv_.appendChild(d)),this.oldContent=d)},window.MarkerLabel_.prototype.onRemove=function(){null!=this.labelDiv_.parentNode&&this.labelDiv_.parentNode.removeChild(this.labelDiv_);null!=this.eventDiv_.parentNode&&this.eventDiv_.parentNode.removeChild(this.eventDiv_);this.listeners_&&this.listeners_.length&&this.listeners_.forEach(function(d){return google.maps.event.removeListener(d)})}})}})}).call(this);
(function(){angular.module("google-maps.directives.api.utils".ns()).service("_sync".ns(),[function(){return{fakePromise:function(){var d;d=void 0;return{then:function(f){return d=f},resolve:function(){return d.apply(void 0,arguments)}}}}}]).factory("_async".ns(),[function(){var d,f;d=function(e,b,c,h,g,a,k){var m,n;try{m=b&&b<e.length?b:e.length;for(n=k;m--&&n<(e?e.length:n+1);)h(e[n],n),++n;if(e)if(n<e.length){if(k=n,b)return"function"===typeof g&&g(),setTimeout(function(){return d(e,b,c,h,g,a,k)},
    c)}else return a.resolve()}catch(r){return a.reject("error within chunking iterator: "+r)}};f=function(e,b,c,h,g,a){var k,m;null==h&&(h=20);null==g&&(g=0);null==a&&(a=1);k=Promise.defer();m=k.promise;if(!a)return k.reject("pause (delay) must be set from _async!"),m;if(void 0===e||0>=(null!=e?e.length:void 0))return k.resolve(),m;d(e,h,a,b,c,k,g);return m};return{each:f,map:function(d,b,c,h,g,a){var k;k=[];return null!=d&&0<(null!=d?d.length:void 0)?f(d,function(a){return k.push(b(a))},c,h,g,a).then(function(){return k}):
    Promise.resolve(k)},waitOrGo:function(d,b){return d.existingPieces?d.existingPieces=d.existingPieces.then(function(){return b()}):d.existingPieces=b()},defaultChunkSize:20}}])}).call(this);
(function(){var d=[].indexOf||function(d){for(var e=0,b=this.length;e<b;e++)if(e in this&&this[e]===d)return e;return-1};angular.module("google-maps.directives.api.utils".ns()).factory("BaseObject".ns(),function(){var f;f=["extended","included"];return function(){function e(){}e.extend=function(b){var c,h,g;for(c in b)h=b[c],0>d.call(f,c)&&(this[c]=h);null!=(g=b.extended)&&g.apply(this);return this};e.include=function(b){var c,h,g;for(c in b)h=b[c],0>d.call(f,c)&&(this.prototype[c]=h);null!=(g=b.included)&&
g.apply(this);return this};return e}()})}).call(this);(function(){angular.module("google-maps.directives.api.utils".ns()).factory("ChildEvents".ns(),function(){return{onChildCreation:function(d){}}})}).call(this);
(function(){angular.module("google-maps.directives.api.utils".ns()).service("CtrlHandle".ns(),["$q",function(d){return{handle:function(f,e){f.deferred=d.defer();return{getScope:function(){return f}}},mapPromise:function(d,e){var b;b=e.getScope();b.deferred.promise.then(function(b){return d.map=b});return b.deferred.promise}}}])}).call(this);
(function(){angular.module("google-maps.directives.api.utils".ns()).service("EventsHelper".ns(),["Logger".ns(),function(d){return{setEvents:function(f,e,b,c){if(angular.isDefined(e.events)&&null!=e.events&&angular.isObject(e.events))return _.compact(_.map(e.events,function(h,g){var a;c&&(a=_(c).contains(g));return e.events.hasOwnProperty(g)&&angular.isFunction(e.events[g])&&!a?google.maps.event.addListener(f,g,function(){return e.$apply(h.apply(e,[f,g,b,arguments]))}):d.info("EventHelper: invalid event listener "+
g)}))},removeEvents:function(d){return null!=d?d.forEach(function(d){return google.maps.event.removeListener(d)}):void 0}}}])}).call(this);
(function(){var d={}.hasOwnProperty,f=function(e,b){function c(){this.constructor=e}for(var h in b)d.call(b,h)&&(e[h]=b[h]);c.prototype=b.prototype;e.prototype=new c;e.__super__=b.prototype;return e};angular.module("google-maps.directives.api.utils".ns()).factory("FitHelper".ns(),["BaseObject".ns(),"Logger".ns(),"_async".ns(),function(d,b,c){return function(b){function g(){return g.__super__.constructor.apply(this,arguments)}f(g,b);g.prototype.fit=function(a,b){var h,g;if(b&&a&&0<a.length)return h=
    new google.maps.LatLngBounds,g=!1,c.each(a,function(a){return function(a){if(a)return g||(g=!0),h.extend(a.getPosition())}}(this)).then(function(){if(g)return b.fitBounds(h)})};return g}(d)}])}).call(this);
(function(){angular.module("google-maps.directives.api.utils".ns()).service("GmapUtil".ns(),["Logger".ns(),"$compile",function(d,f){var e,b,c;b=function(b){return Array.isArray(b)&&2===b.length?b[1]:angular.isDefined(b.type)&&"Point"===b.type?b.coordinates[1]:b.latitude};c=function(b){return Array.isArray(b)&&2===b.length?b[0]:angular.isDefined(b.type)&&"Point"===b.type?b.coordinates[0]:b.longitude};e=function(b){if(b)return Array.isArray(b)&&2===b.length?new google.maps.LatLng(b[1],b[0]):angular.isDefined(b.type)&&
"Point"===b.type?new google.maps.LatLng(b.coordinates[1],b.coordinates[0]):new google.maps.LatLng(b.latitude,b.longitude)};return{setCoordsFromEvent:function(b,c){if(b)return Array.isArray(b)&&2===b.length?(b[1]=c.lat(),b[0]=c.lng()):angular.isDefined(b.type)&&"Point"===b.type?(b.coordinates[1]=c.lat(),b.coordinates[0]=c.lng()):(b.latitude=c.lat(),b.longitude=c.lng()),b},getLabelPositionPoint:function(b){var c;if(void 0!==b&&(b=/^([-\d\.]+)\s([-\d\.]+)$/.exec(b),c=parseFloat(b[1]),b=parseFloat(b[2]),
    null!=c&&null!=b))return new google.maps.Point(c,b)},createWindowOptions:function(b,c,a,k){if(null!=a&&null!=k&&null!=f)return c=angular.extend({},k,{content:this.buildContent(c,k,a),position:null!=k.position?k.position:angular.isObject(b)?b.getPosition():e(c.coords)}),null!=b&&null==(null!=c?c.pixelOffset:void 0)&&(c.pixelOffset=null==c.boxClass?{height:-40,width:0}:{height:0,width:-2}),c;if(k)return k;d.error("infoWindow defaults not defined");if(!a)return d.error("infoWindow content not defined")},
    buildContent:function(b,c,a){var k;null!=c.content?k=c.content:null!=f?(b=f(a)(b),0<b.length&&(k=b[0])):k=a;return k},defaultDelay:50,isTrue:function(b){return angular.isDefined(b)&&null!==b&&!0===b||"1"===b||"y"===b||"true"===b},isFalse:function(b){return-1!==["false","FALSE",0,"n","N","no","NO"].indexOf(b)},getCoords:e,validateCoords:function(b){if(angular.isUndefined(b))return!1;if(_.isArray(b)){if(2===b.length)return!0}else if(null!=b&&null!=b&&b.type&&"Point"===b.type&&_.isArray(b.coordinates)&&
        2===b.coordinates.length)return!0;return b&&angular.isDefined((null!=b?b.latitude:void 0)&&angular.isDefined(null!=b?b.longitude:void 0))?!0:!1},equalCoords:function(h,d){return b(h)===b(d)&&c(h)===c(d)},validatePath:function(b){var c,a;c=0;if(angular.isUndefined(b.type)){if(!Array.isArray(b)||2>b.length)return!1;for(;c<b.length;){if(!(angular.isDefined(b[c].latitude)&&angular.isDefined(b[c].longitude)||"function"===typeof b[c].lat&&"function"===typeof b[c].lng))return!1;c++}}else{if(angular.isUndefined(b.coordinates))return!1;
        if("Polygon"===b.type){if(4>b.coordinates[0].length)return!1;b=b.coordinates[0]}else if("MultiPolygon"===b.type){if(a={max:0,index:0},_.forEach(b.coordinates,function(a,b){if(a[0].length>this.max)return this.max=a[0].length,this.index=b},a),b=b.coordinates[a.index],b=b[0],4>b.length)return!1}else if("LineString"===b.type){if(2>b.coordinates.length)return!1;b=b.coordinates}else return!1;for(;c<b.length;){if(2!==b[c].length)return!1;c++}}return!0},convertPathPoints:function(b){var c,a,k,d;a=0;d=new google.maps.MVCArray;
        if(angular.isUndefined(b.type))for(;a<b.length;)k,angular.isDefined(b[a].latitude)&&angular.isDefined(b[a].longitude)?k=new google.maps.LatLng(b[a].latitude,b[a].longitude):"function"===typeof b[a].lat&&"function"===typeof b[a].lng&&(k=b[a]),d.push(k),a++;else for(c,"Polygon"===b.type?c=b.coordinates[0]:"MultiPolygon"===b.type?(c={max:0,index:0},_.forEach(b.coordinates,function(a,b){if(a[0].length>this.max)return this.max=a[0].length,this.index=b},c),c=b.coordinates[c.index][0]):"LineString"===b.type&&
        (c=b.coordinates);a<c.length;)d.push(new google.maps.LatLng(c[a][1],c[a][0])),a++;return d},extendMapBounds:function(b,c){var a,k;a=new google.maps.LatLngBounds;for(k=0;k<c.length;)a.extend(c.getAt(k)),k++;return b.fitBounds(a)},getPath:function(b,c){var a;a=b;_.each(c.split("."),function(b){if(a)return a=a[b]});return a},validateBoundPoints:function(b){return angular.isUndefined(b.sw.latitude)||angular.isUndefined(b.sw.longitude)||angular.isUndefined(b.ne.latitude)||angular.isUndefined(b.ne.longitude)?
        !1:!0},convertBoundPoints:function(b){return new google.maps.LatLngBounds(new google.maps.LatLng(b.sw.latitude,b.sw.longitude),new google.maps.LatLng(b.ne.latitude,b.ne.longitude))},fitMapBounds:function(b,c){return b.fitBounds(c)}}}])}).call(this);
(function(){angular.module("google-maps.directives.api.utils".ns()).service("IsReady".ns(),["$q","$timeout",function(d,f){var e,b,c;e=0;c=[];b=function(){return d.all(c)};return{spawn:function(){var b;b=d.defer();c.push(b.promise);e+=1;return{instance:e,deferred:b}},promises:b,instances:function(){return e},promise:function(c){var g,a;null==c&&(c=1);g=d.defer();a=function(){return f(function(){return e!==c?a():g.resolve(b())})};a();return g.promise}}}])}).call(this);
(function(){var d={}.hasOwnProperty,f=function(e,b){function c(){this.constructor=e}for(var h in b)d.call(b,h)&&(e[h]=b[h]);c.prototype=b.prototype;e.prototype=new c;e.__super__=b.prototype;return e};angular.module("google-maps.directives.api.utils".ns()).factory("Linked".ns(),["BaseObject".ns(),function(d){return function(b){function c(b,c,a,k){this.scope=b;this.element=c;this.attrs=a;this.ctrls=k}f(c,b);return c}(d)}])}).call(this);
(function(){angular.module("google-maps.directives.api.utils".ns()).service("Logger".ns(),["$log",function(d){return{doLog:!1,info:function(f){if(this.doLog)return null!=d?d.info(f):console.info(f)},log:function(f){if(this.doLog)return null!=d?d.log(f):console.log(f)},error:function(f){if(this.doLog)return null!=d?d.error(f):console.error(f)},debug:function(f){if(this.doLog)return null!=d?d.debug(f):console.debug(f)},warn:function(f){if(this.doLog)return null!=d?d.warn(f):console.warn(f)}}}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.utils".ns()).factory("ModelKey".ns(),["BaseObject".ns(),"GmapUtil".ns(),function(b,c){return function(b){function g(a){this.scope=a;this.setIdKey=d(this.setIdKey,this);this.modelKeyComparison=d(this.modelKeyComparison,
    this);g.__super__.constructor.call(this);this.defaultIdKey="id";this.idKey=void 0}e(g,b);g.prototype.evalModelHandle=function(a,b){return void 0===a||void 0===b?void 0:"self"===b?a:c.getPath(a,b)};g.prototype.modelKeyComparison=function(a,b){var d;d=null!=this.scope.coords?this.scope:this.parentScope;if(null==d)throw"No scope or parentScope set!";return c.equalCoords(this.evalModelHandle(a,d.coords),this.evalModelHandle(b,d.coords))};g.prototype.setIdKey=function(a){return this.idKey=null!=a.idKey?
    a.idKey:this.defaultIdKey};g.prototype.setVal=function(a,b,c){this.modelOrKey(a,b);return a};g.prototype.modelOrKey=function(a,b){return"self"!==b?a[b]:a};return g}(b)}])}).call(this);
(function(){angular.module("google-maps.directives.api.utils".ns()).factory("ModelsWatcher".ns(),["Logger".ns(),"_async".ns(),function(d,f){return{figureOutState:function(e,b,c,h,g){var a,k,m,n;a=[];k={};m=[];n=[];return f.each(b.models,function(b){var g;if(null!=b[e]){k[b[e]]={};if(null==c[b[e]])return a.push(b);g=c[b[e]];if(!h(b,g.model))return n.push({model:b,child:g})}else return d.error(" id missing for model "+b.toString()+",\ncan not use do comparison/insertion")}).then(function(a){return function(){return f.each(c.values(),
    function(a){var b;if(null==a)d.error("child undefined in ModelsWatcher.");else if(null==a.model)d.error("child.model undefined in ModelsWatcher.");else if(b=a.model[e],null==k[b])return m.push(a)})}}(this)).then(function(b){return function(){return g({adds:a,removals:m,updates:n})}}(this))}}}])}).call(this);
(function(){var d,f=function(d,b){return function(){return d.apply(b,arguments)}};d="get put remove values keys length push didValueStateChange didKeyStateChange slice removeAll allVals allKeys stateChanged".split(" ");window.PropMap=function(){function e(){this.removeAll=f(this.removeAll,this);this.slice=f(this.slice,this);this.push=f(this.push,this);this.keys=f(this.keys,this);this.values=f(this.values,this);this.remove=f(this.remove,this);this.put=f(this.put,this);this.stateChanged=f(this.stateChanged,
    this);this.get=f(this.get,this);this.length=0;this.didKeyStateChange=this.didValueStateChange=!1;this.allVals=[];this.allKeys=[]}e.prototype.get=function(b){return this[b]};e.prototype.stateChanged=function(){return this.didKeyStateChange=this.didValueStateChange=!0};e.prototype.put=function(b,c){null==this.get(b)&&this.length++;this.stateChanged();return this[b]=c};e.prototype.remove=function(b,c){var d;null==c&&(c=!1);if(!c||this.get(b))return d=this[b],delete this[b],this.length--,this.stateChanged(),
    d};e.prototype.values=function(){var b;if(!this.didValueStateChange)return this.allVals;b=[];this.keys().forEach(function(c){return function(h){if(-1===_.indexOf(d,h))return b.push(c[h])}}(this));b;this.didValueStateChange=!1;this.keys();return this.allVals=b};e.prototype.keys=function(){var b,c;if(!this.didKeyStateChange)return this.allKeys;c=_.keys(this);b=[];_.each(c,function(c){return function(c){if(-1===_.indexOf(d,c))return b.push(c)}}(this));this.didKeyStateChange=!1;this.values();return this.allKeys=
    b};e.prototype.push=function(b,c){null==c&&(c="key");return this.put(b[c],b)};e.prototype.slice=function(){return this.keys().map(function(b){return function(c){return b.remove(c)}}(this))};e.prototype.removeAll=function(){return this.slice()};return e}();angular.module("google-maps.directives.api.utils".ns()).factory("PropMap".ns(),function(){return window.PropMap})}).call(this);
(function(){angular.module("google-maps.directives.api.utils".ns()).factory("PropertyAction".ns(),["Logger".ns(),function(d){return function(d,e){this.setIfChange=function(b,c){if(!_.isEqual(c,b||e))return d(b)};this.sic=function(b){return function(c,d){return b.setIfChange(c,d)}}(this);return this}}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.managers".ns()).factory("ClustererMarkerManager".ns(),["Logger".ns(),"FitHelper".ns(),"PropMap".ns(),function(b,c,h){return function(c){function a(c,g,e,r){this.opt_events=r;this.checkSync=d(this.checkSync,
    this);this.getGMarkers=d(this.getGMarkers,this);this.fit=d(this.fit,this);this.destroy=d(this.destroy,this);this.clear=d(this.clear,this);this.draw=d(this.draw,this);this.removeMany=d(this.removeMany,this);this.remove=d(this.remove,this);this.addMany=d(this.addMany,this);this.add=d(this.add,this);a.__super__.constructor.call(this);this.opt_options=e;this.clusterer=null!=e&&void 0===g?new NgMapMarkerClusterer(c,void 0,e):null!=e&&null!=g?new NgMapMarkerClusterer(c,g,e):new NgMapMarkerClusterer(c);
    this.propMapGMarkers=new h;this.attachEvents(this.opt_events,"opt_events");this.clusterer.setIgnoreHidden(!0);this.noDrawOnSingleAddRemoves=!0;b.info(this)}e(a,c);a.prototype.checkKey=function(a){if(null==a.key)return Logger.error("gMarker.key undefined and it is REQUIRED!!")};a.prototype.add=function(a){this.checkKey(a);this.propMapGMarkers.get(a.key);this.clusterer.addMarker(a,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.put(a.key,a);return this.checkSync()};a.prototype.addMany=function(a){return a.forEach(function(a){return function(b){return a.add(b)}}(this))};
    a.prototype.remove=function(a){this.checkKey(a);this.propMapGMarkers.get(a.key)&&(this.clusterer.removeMarker(a,this.noDrawOnSingleAddRemoves),this.propMapGMarkers.remove(a.key));return this.checkSync()};a.prototype.removeMany=function(a){return a.forEach(function(a){return function(b){return a.remove(b)}}(this))};a.prototype.draw=function(){return this.clusterer.repaint()};a.prototype.clear=function(){this.removeMany(this.getGMarkers());return this.clusterer.repaint()};a.prototype.attachEvents=function(a,
c){var d,h;if(angular.isDefined(a)&&null!=a&&angular.isObject(a)){h=[];for(d in a)a.hasOwnProperty(d)&&angular.isFunction(a[d])?(b.info(""+c+": Attaching event: "+d+" to clusterer"),h.push(google.maps.event.addListener(this.clusterer,d,a[d]))):h.push(void 0);return h}};a.prototype.clearEvents=function(a){var c,d;if(angular.isDefined(a)&&null!=a&&angular.isObject(a)){d=[];for(c in a)a.hasOwnProperty(c)&&angular.isFunction(a[c])?(b.info(""+optionsName+": Clearing event: "+c+" to clusterer"),d.push(google.maps.event.clearListeners(this.clusterer,
        c))):d.push(void 0);return d}};a.prototype.destroy=function(){this.clearEvents(this.opt_events);this.clearEvents(this.opt_internal_events);return this.clear()};a.prototype.fit=function(){return a.__super__.fit.call(this,this.getGMarkers(),this.clusterer.getMap())};a.prototype.getGMarkers=function(){return this.clusterer.getMarkers().values()};a.prototype.checkSync=function(){if(this.getGMarkers().length!==this.propMapGMarkers.length)throw"GMarkers out of Sync in MarkerClusterer";};return a}(c)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.managers".ns()).factory("MarkerManager".ns(),["Logger".ns(),"FitHelper".ns(),"PropMap".ns(),function(b,c,h){return function(g){function a(c,g,e){this.getGMarkers=d(this.getGMarkers,this);this.fit=
    d(this.fit,this);this.handleOptDraw=d(this.handleOptDraw,this);this.clear=d(this.clear,this);this.draw=d(this.draw,this);this.removeMany=d(this.removeMany,this);this.remove=d(this.remove,this);this.addMany=d(this.addMany,this);this.add=d(this.add,this);a.__super__.constructor.call(this);this.gMap=c;this.gMarkers=new h;this.$log=b;this.$log.info(this)}e(a,g);a.include(c);a.prototype.add=function(a,c){null==c&&(c=!0);if(null==a.key)throw b.error("gMarker.key undefined and it is REQUIRED!!"),"gMarker.key undefined and it is REQUIRED!!";
    if(null==this.gMarkers.get(a.key))return this.handleOptDraw(a,c,!0),this.gMarkers.put(a.key,a)};a.prototype.addMany=function(a){return a.forEach(function(a){return function(b){return a.add(b)}}(this))};a.prototype.remove=function(a,b){null==b&&(b=!0);this.handleOptDraw(a,b,!1);if(this.gMarkers.get(a.key))return this.gMarkers.remove(a.key)};a.prototype.removeMany=function(a){return this.gMarkers.values().forEach(function(a){return function(b){return a.remove(b)}}(this))};a.prototype.draw=function(){var a;
    a=[];this.gMarkers.values().forEach(function(b){return function(c){if(!c.isDrawn)return c.doAdd?(c.setMap(b.gMap),c.isDrawn=!0):a.push(c)}}(this));return a.forEach(function(a){return function(b){b.isDrawn=!1;return a.remove(b,!0)}}(this))};a.prototype.clear=function(){this.gMarkers.values().forEach(function(a){return a.setMap(null)});delete this.gMarkers;return this.gMarkers=new h};a.prototype.handleOptDraw=function(a,b,c){if(!0===b)return c?a.setMap(this.gMap):a.setMap(null),a.isDrawn=!0;a.isDrawn=
    !1;return a.doAdd=c};a.prototype.fit=function(){return a.__super__.fit.call(this,this.getGMarkers(),this.gMap)};a.prototype.getGMarkers=function(){return this.gMarkers.values()};return a}(c)}])}).call(this);
(function(){angular.module("google-maps".ns()).factory("add-events".ns(),["$timeout",function(d){var f;f=function(e,b,c){return google.maps.event.addListener(e,b,function(){c.apply(this,arguments);return d(function(){},!0)})};return function(d,b,c){var h;if(c)return f(d,b,c);h=[];angular.forEach(b,function(b,a){return h.push(f(d,a,b))});return function(){angular.forEach(h,function(b){return google.maps.event.removeListener(b)});return h=null}}}])}).call(this);
(function(){angular.module("google-maps".ns()).factory("array-sync".ns(),["add-events".ns(),function(d){return function(f,e,b,c){var h,g,a,k,m,n,r;a=!1;n=e.$eval(b);e["static"]||(k={set_at:function(b){var c;if(!a&&(c=f.getAt(b)))return c.lng&&c.lat?(n[b].latitude=c.lat(),n[b].longitude=c.lng()):n[b]=c},insert_at:function(b){var c;if(!a&&(c=f.getAt(b)))return c.lng&&c.lat?n.splice(b,0,{latitude:c.lat(),longitude:c.lng()}):n.splice(b,0,c)},remove_at:function(b){if(!a)return n.splice(b,1)}},h,"Polygon"===
n.type?h=n.coordinates[0]:"LineString"===n.type&&(h=n.coordinates),g={set_at:function(b){var c;if(!a&&(c=f.getAt(b))&&c.lng&&c.lat)return h[b][1]=c.lat(),h[b][0]=c.lng()},insert_at:function(b){var c;if(!a&&(c=f.getAt(b))&&c.lng&&c.lat)return h.splice(b,0,[c.lng(),c.lat()])},remove_at:function(b){if(!a)return h.splice(b,1)}},m=d(f,angular.isUndefined(n.type)?k:g));k=function(b){var d,k,h,g,e,r,m;a=!0;d=!1;if(b){k=0;r=f.getLength();g=b.length;for(h=Math.min(r,g);k<h;){m=f.getAt(k);e=b[k];if("function"===
    typeof e.equals)e.equals(m)||(f.setAt(k,e),d=!0);else if(m.lat()!==e.latitude||m.lng()!==e.longitude)f.setAt(k,new google.maps.LatLng(e.latitude,e.longitude)),d=!0;k++}for(;k<g;)e=b[k],"function"===typeof e.lat&&"function"===typeof e.lng?f.push(e):f.push(new google.maps.LatLng(e.latitude,e.longitude)),d=!0,k++;for(;k<r;)f.pop(),d=!0,k++}a=!1;if(d)return c(f)};g=function(b){var d,k,h,e,g,r,m;a=!0;k=!1;if(b){d;"Polygon"===n.type?d=b.coordinates[0]:"LineString"===n.type&&(d=b.coordinates);b=0;r=f.getLength();
    e=d.length;for(h=Math.min(r,e);b<h;){m=f.getAt(b);g=d[b];if(m.lat()!==g[1]||m.lng()!==g[0])f.setAt(b,new google.maps.LatLng(g[1],g[0])),k=!0;b++}for(;b<e;)g=d[b],f.push(new google.maps.LatLng(g[1],g[0])),k=!0,b++;for(;b<r;)f.pop(),k=!0,b++}a=!1;if(k)return c(f)};r;e["static"]||(r=angular.isUndefined(n.type)?e.$watchCollection(b,k):e.$watch(b,g,!0));return function(){m&&(m(),m=null);if(r)return r(),r=null}}}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.options.builders".ns()).service("CommonOptionsBuilder".ns(),["BaseObject".ns(),"Logger".ns(),function(b,c){return function(b){function g(){this.watchProps=d(this.watchProps,this);this.buildOpts=
    d(this.buildOpts,this);return g.__super__.constructor.apply(this,arguments)}e(g,b);g.prototype.props=["clickable","draggable","editable","visible",{prop:"stroke",isColl:!0}];g.prototype.buildOpts=function(a,b){var d,g,e,h,f,p;null==a&&(a={});null==b&&(b={});if(this.scope){if(this.map)return g=(d=_(this.scope).chain().keys().contains("model").value())?this.scope.model:this.scope,e=angular.extend(a,this.DEFAULTS,{map:this.map,strokeColor:null!=(h=g.stroke)?h.color:void 0,strokeOpacity:null!=(f=g.stroke)?
    f.opacity:void 0,strokeWeight:null!=(p=g.stroke)?p.weight:void 0}),angular.forEach(angular.extend(b,{clickable:!0,draggable:!1,editable:!1,"static":!1,fit:!1,visible:!0,zIndex:0}),function(a){return function(a,b){return angular.isUndefined(g[b]||null===g[b])?e[b]=a:e[b]=g[b]}}(this)),e["static"]&&(e.editable=!1),e;c.error("this.map not defined in CommonOptionsBuilder can not buildOpts")}else c.error("this.scope not defined in CommonOptionsBuilder can not buildOpts")};g.prototype.watchProps=function(a){null==
a&&(a=this.props);return a.forEach(function(a){return function(b){if(null!=a.attrs[b]||null!=a.attrs[null!=b?b.prop:void 0])return null!=b&&b.isColl?a.scope.$watchCollection(b.prop,a.setMyOptions):a.scope.$watch(b,a.setMyOptions)}}(this))};return g}(b)}])}).call(this);
(function(){var d={}.hasOwnProperty,f=function(e,b){function c(){this.constructor=e}for(var h in b)d.call(b,h)&&(e[h]=b[h]);c.prototype=b.prototype;e.prototype=new c;e.__super__=b.prototype;return e};angular.module("google-maps.directives.api.options.builders".ns()).factory("PolylineOptionsBuilder".ns(),["CommonOptionsBuilder".ns(),function(d){return function(b){function c(){return c.__super__.constructor.apply(this,arguments)}f(c,b);c.prototype.buildOpts=function(b){return c.__super__.buildOpts.call(this,
    {path:b},{geodesic:!1})};return c}(d)}]).factory("ShapeOptionsBuilder".ns(),["CommonOptionsBuilder".ns(),function(d){return function(b){function c(){return c.__super__.constructor.apply(this,arguments)}f(c,b);c.prototype.buildOpts=function(b,d){var a,k;b=angular.extend(b,{fillColor:null!=(a=this.scope.fill)?a.color:void 0,fillOpacity:null!=(k=this.scope.fill)?k.opacity:void 0});return c.__super__.buildOpts.call(this,b,d)};return c}(d)}]).factory("PolygonOptionsBuilder".ns(),["ShapeOptionsBuilder".ns(),
    function(d){return function(b){function c(){return c.__super__.constructor.apply(this,arguments)}f(c,b);c.prototype.buildOpts=function(b){return c.__super__.buildOpts.call(this,{path:b},{geodesic:!1})};return c}(d)}]).factory("RectangleOptionsBuilder".ns(),["ShapeOptionsBuilder".ns(),function(d){return function(b){function c(){return c.__super__.constructor.apply(this,arguments)}f(c,b);c.prototype.buildOpts=function(b){return c.__super__.buildOpts.call(this,{bounds:b})};return c}(d)}]).factory("CircleOptionsBuilder".ns(),
    ["ShapeOptionsBuilder".ns(),function(d){return function(b){function c(){return c.__super__.constructor.apply(this,arguments)}f(c,b);c.prototype.buildOpts=function(b,d){return c.__super__.buildOpts.call(this,{center:b,radius:d})};return c}(d)}])}).call(this);
(function(){angular.module("google-maps.directives.api.options".ns()).service("MarkerOptions".ns(),["Logger".ns(),"GmapUtil".ns(),function(d,f){return _.extend(f,{createOptions:function(d,b,c,h){null==h&&(h=void 0);null==c&&(c={});d=angular.extend({},c,{position:null!=c.position?c.position:f.getCoords(d),visible:null!=c.visible?c.visible:f.validateCoords(d)});if(null!=c.icon||null!=b)d=angular.extend(d,{icon:null!=c.icon?c.icon:b});null!=h&&(d.map=h);return d},isLabel:function(d){return null!=d.labelContent||
null!=d.labelAnchor||null!=d.labelClass||null!=d.labelStyle||null!=d.labelVisible?!0:!1}})}])}).call(this);
(function(){angular.module("google-maps.directives.api.models.child".ns()).factory("DrawFreeHandChildModel".ns(),["Logger".ns(),"$q",function(d,f){var e;e=function(b,c,d){var g,a;this.polys=c;a=new google.maps.Polyline({map:b,clickable:!1});g=google.maps.event.addListener(b,"mousemove",function(b){return a.getPath().push(b.latLng)});google.maps.event.addListenerOnce(b,"mouseup",function(k){google.maps.event.removeListener(g);k=a.getPath();a.setMap(null);c.push(new google.maps.Polygon({map:b,path:k}));
    a=null;google.maps.event.clearListeners(b.getDiv(),"mousedown");return d()})};return function(b){var c,h;this.map=b;h=function(b){return function(){var a;null!=(a=b.deferred)&&a.resolve();return b.map.setOptions(b.oldOptions)}}(this);c=function(c){return function(){d.info("disabling map move");c.oldOptions=b.getOptions();return c.map.setOptions({draggable:!1,zoomControl:!1,scrollwheel:!1,disableDoubleClickZoom:!1})}}(this);this.engage=function(b){return function(a){b.polys=a;b.deferred=f.defer();
    c();d.info("DrawFreeHandChildModel is engaged (drawing).");google.maps.event.addDomListener(b.map.getDiv(),"mousedown",function(a){return e(b.map,b.polys,h)});return b.deferred.promise}}(this);return this}}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.models.child".ns()).factory("MarkerChildModel".ns(),["ModelKey".ns(),"GmapUtil".ns(),"Logger".ns(),"EventsHelper".ns(),"MarkerOptions".ns(),function(b,c,h,g,a){return function(b){function m(a,b,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 c,k,g,e,v,t,w){this.model=b;this.keys=c;this.gMap=k;this.defaults=g;this.doClick=e;this.gMarkerManager=v;this.doDrawSelf=null!=t?t:!0;this.trackModel=null!=w?w:!0;this.internalEvents=d(this.internalEvents,this);this.setLabelOptions=d(this.setLabelOptions,this);this.setOptions=d(this.setOptions,this);this.setIcon=d(this.setIcon,this);this.setCoords=d(this.setCoords,this);this.maybeSetScopeValue=d(this.maybeSetScopeValue,this);this.createMarker=d(this.createMarker,this);this.setMyScope=d(this.setMyScope,
    this);this.destroy=d(this.destroy,this);_.each(this.keys,function(a){return function(b,c){return a[c+"Key"]=_.isFunction(a.keys[c])?a.keys[c]():a.keys[c]}}(this));this.idKey=this.idKeyKey||"id";null!=this.model[this.idKey]&&(this.id=this.model[this.idKey]);this.needRedraw=!1;this.deferred=Promise.defer();m.__super__.constructor.call(this,a);this.setMyScope(this.model,void 0,!0);this.createMarker(this.model);this.trackModel?(this.scope.model=this.model,this.scope.$watch("model",function(a){return function(b,
c){if(b!==c)return a.setMyScope(b,c),a.needRedraw=!0}}(this),!0)):_.each(this.keys,function(a){return function(b,c){return a.scope.$watch(c,function(){return a.setMyScope(a.scope)})}}(this));this.scope.$on("$destroy",function(a){return function(){return f(a)}}(this));h.info(this)}var f;e(m,b);m.include(c);m.include(g);m.include(a);f=function(a){if(null!=(null!=a?a.gMarker:void 0)&&(a.removeEvents(a.externalListeners),a.removeEvents(a.internalListeners),null!=a&&a.gMarker))return null!=a&&a.gMarkerManager.remove(null!=
a?a.gMarker:void 0,!0),delete a.gMarker};m.prototype.destroy=function(){return this.scope.$destroy()};m.prototype.setMyScope=function(a,b,c){null==b&&(b=void 0);null==c&&(c=!1);this.maybeSetScopeValue("icon",a,b,this.iconKey,this.evalModelHandle,c,this.setIcon);this.maybeSetScopeValue("coords",a,b,this.coordsKey,this.evalModelHandle,c,this.setCoords);if(_.isFunction(this.clickKey))return this.scope.click=function(a){return function(){return a.clickKey(a.gMarker,"click",a.model,void 0)}}(this);this.maybeSetScopeValue("click",
    a,b,this.clickKey,this.evalModelHandle,c);return this.createMarker(a,b,c)};m.prototype.createMarker=function(a,b,c){null==b&&(b=void 0);null==c&&(c=!1);return this.maybeSetScopeValue("options",a,b,this.optionsKey,this.evalModelHandle,c,this.setOptions)};m.prototype.maybeSetScopeValue=function(a,b,c,d,k,g,e){null==e&&(e=void 0);if(void 0===c)this.scope[a]=k(b,d),g||null!=e&&e(this.scope);else if(c=k(c,d),b=k(b,d),b!==c&&(this.scope[a]=b,!g&&(null!=e&&e(this.scope),this.doDrawSelf)))return this.gMarkerManager.draw()};
    m.prototype.setCoords=function(a){if(a.$id===this.scope.$id&&void 0!==this.gMarker)if(null!=a.coords){if(this.validateCoords(this.scope.coords))return this.gMarker.setPosition(this.getCoords(a.coords)),this.gMarker.setVisible(this.validateCoords(a.coords)),this.gMarkerManager.add(this.gMarker);h.debug("MarkerChild does not have coords yet. They may be defined later.")}else return this.gMarkerManager.remove(this.gMarker)};m.prototype.setIcon=function(a){if(a.$id===this.scope.$id&&void 0!==this.gMarker)return this.gMarkerManager.remove(this.gMarker),
        this.gMarker.setIcon(a.icon),this.gMarkerManager.add(this.gMarker),this.gMarker.setPosition(this.getCoords(a.coords)),this.gMarker.setVisible(this.validateCoords(a.coords))};m.prototype.setOptions=function(a){var b;if(a.$id===this.scope.$id&&(null!=this.gMarker&&(this.gMarkerManager.remove(this.gMarker),delete this.gMarker),null!=(b=a.coords)?b:"function"===typeof a.icon&&a.icon(null!=a.options)))return this.opts=this.createOptions(a.coords,a.icon,a.options),delete this.gMarker,this.isLabel(this.opts)?
        this.gMarker=new MarkerWithLabel(this.setLabelOptions(this.opts)):this.gMarker=new google.maps.Marker(this.opts),this.gMarker?this.deferred.resolve(this.gMarker):this.deferred.reject("gMarker is null"),this.model.fitKey&&this.gMarkerManager.fit(),this.externalListeners&&this.removeEvents(this.externalListeners),this.internalListeners&&this.removeEvents(this.internalListeners),this.externalListeners=this.setEvents(this.gMarker,this.scope,this.model,["dragend"]),this.internalListeners=this.setEvents(this.gMarker,
        {events:this.internalEvents(),$apply:function(){}},this.model),null!=this.id&&(this.gMarker.key=this.id),this.gMarkerManager.add(this.gMarker)};m.prototype.setLabelOptions=function(a){a.labelAnchor=this.getLabelPositionPoint(a.labelAnchor);return a};m.prototype.internalEvents=function(){return{dragend:function(a){return function(b,c,d,k){var g,e;g=a.trackModel?a.scope.model:a.model;g=a.setCoordsFromEvent(a.modelOrKey(g,a.coordsKey),a.gMarker.getPosition());g=a.setVal(d,a.coordsKey,g);null!=(null!=
    (e=a.scope.events)?e.dragend:void 0)&&a.scope.events.dragend(b,c,g,k);return a.scope.$apply()}}(this),click:function(a){return function(b,c,d,k){if(a.doClick&&null!=a.scope.click)return a.scope.$apply(a.scope.click(b,c,a.model,k))}}(this)}};return m}(b)}])}).call(this);
(function(){var d={}.hasOwnProperty,f=function(e,b){function c(){this.constructor=e}for(var h in b)d.call(b,h)&&(e[h]=b[h]);c.prototype=b.prototype;e.prototype=new c;e.__super__=b.prototype;return e};angular.module("google-maps.directives.api".ns()).factory("PolygonChildModel".ns(),["PolygonOptionsBuilder".ns(),"Logger".ns(),"$timeout","array-sync".ns(),"GmapUtil".ns(),"EventsHelper".ns(),function(d,b,c,h,g,a){return function(c){function d(c,k,g,e,m){var f,l;this.scope=c;this.attrs=k;this.map=g;this.defaults=
    e;this.model=m;this.listeners=void 0;angular.isUndefined(c.path)||null===c.path||!this.validatePath(c.path)?b.error("polygon: no valid path attribute found"):(k=this.convertPathPoints(c.path),l=new google.maps.Polygon(this.buildOpts(k)),c.fit&&this.extendMapBounds(this.map,k),!c["static"]&&angular.isDefined(c.editable)&&c.$watch("editable",function(a,b){if(a!==b)return l.setEditable(a)}),angular.isDefined(c.draggable)&&c.$watch("draggable",function(a,b){if(a!==b)return l.setDraggable(a)}),angular.isDefined(c.visible)&&
c.$watch("visible",function(a,b){if(a!==b)return l.setVisible(a)}),angular.isDefined(c.geodesic)&&c.$watch("geodesic",function(a){return function(b,c){if(b!==c)return l.setOptions(a.buildOpts(l.getPath()))}}(this)),angular.isDefined(c.stroke)&&angular.isDefined(c.stroke.opacity)&&c.$watch("stroke.opacity",function(a){return function(b,c){return l.setOptions(a.buildOpts(l.getPath()))}}(this)),angular.isDefined(c.stroke)&&angular.isDefined(c.stroke.weight)&&c.$watch("stroke.weight",function(a){return function(b,
c){if(b!==c)return l.setOptions(a.buildOpts(l.getPath()))}}(this)),angular.isDefined(c.stroke)&&angular.isDefined(c.stroke.color)&&c.$watch("stroke.color",function(a){return function(b,c){if(b!==c)return l.setOptions(a.buildOpts(l.getPath()))}}(this)),angular.isDefined(c.fill)&&angular.isDefined(c.fill.color)&&c.$watch("fill.color",function(a){return function(b,c){if(b!==c)return l.setOptions(a.buildOpts(l.getPath()))}}(this)),angular.isDefined(c.fill)&&angular.isDefined(c.fill.opacity)&&c.$watch("fill.opacity",
    function(a){return function(b,c){if(b!==c)return l.setOptions(a.buildOpts(l.getPath()))}}(this)),angular.isDefined(c.zIndex)&&c.$watch("zIndex",function(a){return function(b,c){if(b!==c)return l.setOptions(a.buildOpts(l.getPath()))}}(this)),angular.isDefined(c.events)&&null!==c.events&&angular.isObject(c.events)&&(this.listeners=a.setEvents(l,c,c)),f=h(l.getPath(),c,"path",function(a){return function(b){if(c.fit)return a.extendMapBounds(a.map,b)}}(this)),c.$on("$destroy",function(a){return function(){l.setMap(null);
    a.removeEvents(a.listeners);if(f)return f(),f=null}}(this)))}f(d,c);d.include(g);d.include(a);return d}(d)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("PolylineChildModel".ns(),["PolylineOptionsBuilder".ns(),"Logger".ns(),"$timeout","array-sync".ns(),"GmapUtil".ns(),"EventsHelper".ns(),function(b,c,h,g,a,k){return function(b){function h(a,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              b,k,e,m){var f;this.scope=a;this.attrs=b;this.map=k;this.defaults=e;this.model=m;this.clean=d(this.clean,this);f=function(a){return function(){var b;b=a.convertPathPoints(a.scope.path);null!=a.polyline&&a.clean();0<b.length&&(a.polyline=new google.maps.Polyline(a.buildOpts(b)));if(a.polyline)return a.scope.fit&&a.extendMapBounds(k,b),g(a.polyline.getPath(),a.scope,"path",function(b){if(a.scope.fit)return a.extendMapBounds(k,b)}),a.listeners=a.model?a.setEvents(a.polyline,a.scope,a.model):a.setEvents(a.polyline,
    a.scope,a.scope)}}(this);f();a.$watch("path",function(a){return function(b,c){if(!_.isEqual(b,c)||!a.polyline)return f()}}(this));!a["static"]&&angular.isDefined(a.editable)&&a.$watch("editable",function(a){return function(b,c){var d;if(b!==c)return null!=(d=a.polyline)?d.setEditable(b):void 0}}(this));angular.isDefined(a.draggable)&&a.$watch("draggable",function(a){return function(b,c){var d;if(b!==c)return null!=(d=a.polyline)?d.setDraggable(b):void 0}}(this));angular.isDefined(a.visible)&&a.$watch("visible",
    function(a){return function(b,c){var d;if(b!==c)return null!=(d=a.polyline)?d.setVisible(b):void 0}}(this));angular.isDefined(a.geodesic)&&a.$watch("geodesic",function(a){return function(b,c){var d;if(b!==c)return null!=(d=a.polyline)?d.setOptions(a.buildOpts(a.polyline.getPath())):void 0}}(this));angular.isDefined(a.stroke)&&angular.isDefined(a.stroke.weight)&&a.$watch("stroke.weight",function(a){return function(b,c){var d;if(b!==c)return null!=(d=a.polyline)?d.setOptions(a.buildOpts(a.polyline.getPath())):
    void 0}}(this));angular.isDefined(a.stroke)&&angular.isDefined(a.stroke.color)&&a.$watch("stroke.color",function(a){return function(b,c){var d;if(b!==c)return null!=(d=a.polyline)?d.setOptions(a.buildOpts(a.polyline.getPath())):void 0}}(this));angular.isDefined(a.stroke)&&angular.isDefined(a.stroke.opacity)&&a.$watch("stroke.opacity",function(a){return function(b,c){var d;if(b!==c)return null!=(d=a.polyline)?d.setOptions(a.buildOpts(a.polyline.getPath())):void 0}}(this));angular.isDefined(a.icons)&&
a.$watch("icons",function(a){return function(b,c){var d;if(b!==c)return null!=(d=a.polyline)?d.setOptions(a.buildOpts(a.polyline.getPath())):void 0}}(this));a.$on("$destroy",function(a){return function(){a.clean();return a.scope=null}}(this));c.info(this)}e(h,b);h.include(a);h.include(k);h.prototype.clean=function(){var a;this.removeEvents(this.listeners);null!=(a=this.polyline)&&a.setMap(null);this.polyline=null};h.prototype.destroy=function(){return this.scope.$destroy()};return h}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.models.child".ns()).factory("WindowChildModel".ns(),["BaseObject".ns(),"GmapUtil".ns(),"Logger".ns(),"$compile","$http","$templateCache",function(b,c,h,g,a,k){return function(b){function f(a,b,c,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                k,g,e,m,n,w){this.model=a;this.scope=b;this.opts=c;this.isIconVisibleOnClick=k;this.mapCtrl=g;this.markerCtrl=e;this.element=m;this.needToManualDestroy=null!=n?n:!1;this.markerIsVisibleAfterWindowClose=null!=w?w:!0;this.getGWin=d(this.getGWin,this);this.destroy=d(this.destroy,this);this.remove=d(this.remove,this);this.getLatestPosition=d(this.getLatestPosition,this);this.hideWindow=d(this.hideWindow,this);this.showWindow=d(this.showWindow,this);this.handleClick=d(this.handleClick,this);this.watchOptions=
    d(this.watchOptions,this);this.watchCoords=d(this.watchCoords,this);this.createGWin=d(this.createGWin,this);this.watchElement=d(this.watchElement,this);this.watchAndDoShow=d(this.watchAndDoShow,this);this.doShow=d(this.doShow,this);this.googleMapsHandles=[];this.$log=h;this.createGWin();null!=this.markerCtrl&&this.markerCtrl.setClickable(!0);this.watchElement();this.watchOptions();this.watchCoords();this.watchAndDoShow();this.scope.$on("$destroy",function(a){return function(){return a.destroy()}}(this));
    this.$log.info(this)}e(f,b);f.include(c);f.prototype.doShow=function(){if(this.scope.show)return this.showWindow()};f.prototype.watchAndDoShow=function(){null!=this.model.show&&(this.scope.show=this.model.show);this.scope.$watch("show",this.doShow,!0);return this.doShow()};f.prototype.watchElement=function(){return this.scope.$watch(function(a){return function(){var b;if(a.element&&a.html&&a.html!==a.element.html()&&a.gWin)return null!=(b=a.opts)&&(b.content=void 0),a.remove(),a.createGWin()}}(this))};
    f.prototype.createGWin=function(){var a;null==this.gWin&&(a={},null!=this.opts&&(this.scope.coords&&(this.opts.position=this.getCoords(this.scope.coords)),a=this.opts),this.element&&(this.html=_.isObject(this.element)?this.element.html():this.element),a=this.scope.options?this.scope.options:a,this.opts=this.createWindowOptions(this.markerCtrl,this.scope,this.html,a));if(null!=this.opts&&!this.gWin)return this.gWin=this.opts.boxClass&&window.InfoBox&&"function"===typeof window.InfoBox?new window.InfoBox(this.opts):
        new google.maps.InfoWindow(this.opts),this.handleClick(),this.doShow(),this.googleMapsHandles.push(google.maps.event.addListener(this.gWin,"closeclick",function(a){return function(){a.markerCtrl&&(a.markerCtrl.setAnimation(a.oldMarkerAnimation),a.markerIsVisibleAfterWindowClose&&_.delay(function(){a.markerCtrl.setVisible(!1);return a.markerCtrl.setVisible(a.markerIsVisibleAfterWindowClose)},250));a.gWin.isOpen(!1);if(null!=a.scope.closeClick)return a.scope.$apply(a.scope.closeClick())}}(this)))};
    f.prototype.watchCoords=function(){return(null!=this.markerCtrl?this.scope.$parent:this.scope).$watch("coords",function(a){return function(b,c){var d;if(b!==c){if(null==b)return a.hideWindow();if(a.validateCoords(b)){if(d=a.getCoords(b),a.gWin.setPosition(d),a.opts)return a.opts.position=d}else a.$log.error("WindowChildMarker cannot render marker as scope.coords as no position on marker: "+JSON.stringify(a.model))}}}(this),!0)};f.prototype.watchOptions=function(){return this.scope.$watch("options",
        function(a){return function(b,c){if(b!==c&&(a.opts=b,null!=a.gWin)){a.gWin.setOptions(a.opts);if(null!=a.opts.visible&&a.opts.visible)return a.showWindow();if(null!=a.opts.visible)return a.hideWindow()}}}(this),!0)};f.prototype.handleClick=function(a){var b;if(null!=this.gWin&&(b=function(a){return function(){var b;null==a.gWin&&a.createGWin();b=a.markerCtrl.getPosition();null!=a.gWin&&(a.gWin.setPosition(b),a.opts&&(a.opts.position=b),a.showWindow());a.initialMarkerVisibility=a.markerCtrl.getVisible();
            a.oldMarkerAnimation=a.markerCtrl.getAnimation();return a.markerCtrl.setVisible(a.isIconVisibleOnClick)}}(this),null!=this.markerCtrl))return a&&b(),this.googleMapsHandles.push(google.maps.event.addListener(this.markerCtrl,"click",b))};f.prototype.showWindow=function(){var b,c;c=function(a){return function(){if(null!=a.gWin&&!a.gWin.isOpen())return a.gWin.open(a.mapCtrl)}}(this);this.scope.templateUrl?null!=this.gWin&&a.get(this.scope.templateUrl,{cache:k}).then(function(a){return function(b){var c;
        c=a.scope.$new();angular.isDefined(a.scope.templateParameter)&&(c.parameter=a.scope.templateParameter);b=g(b.data)(c);return a.gWin.setContent(b[0])}}(this)):this.scope.template&&null!=this.gWin&&(b=this.scope.$new(),angular.isDefined(this.scope.templateParameter)&&(b.parameter=this.scope.templateParameter),b=g(this.scope.template)(b),this.gWin.setContent(b[0]));return c()};f.prototype.hideWindow=function(){if(null!=this.gWin&&this.gWin.isOpen())return this.gWin.close()};f.prototype.getLatestPosition=
        function(a){if(null!=this.gWin&&null!=this.markerCtrl&&!a)return this.gWin.setPosition(this.markerCtrl.getPosition());if(a)return this.gWin.setPosition(a)};f.prototype.remove=function(){this.hideWindow();_.each(this.googleMapsHandles,function(a){return google.maps.event.removeListener(a)});this.googleMapsHandles.length=0;delete this.gWin;return delete this.opts};f.prototype.destroy=function(a){var b;null==a&&(a=!1);this.remove();null!=this.scope&&null!=(b=this.scope)&&b.$$destroyed&&(this.needToManualDestroy||
    a)&&this.scope.$destroy()};f.prototype.getGWin=function(){return this.gWin};return f}(b)}])}).call(this);
(function(){var d={}.hasOwnProperty,f=function(e,b){function c(){this.constructor=e}for(var h in b)d.call(b,h)&&(e[h]=b[h]);c.prototype=b.prototype;e.prototype=new c;e.__super__=b.prototype;return e};angular.module("google-maps.directives.api.models.parent".ns()).factory("CircleParentModel".ns(),["Logger".ns(),"$timeout","GmapUtil".ns(),"EventsHelper".ns(),"CircleOptionsBuilder".ns(),function(d,b,c,h,g){return function(a){function k(a,k,g,h,f){var p,u;this.scope=a;this.attrs=g;this.map=h;this.DEFAULTS=
    f;p=new google.maps.Circle(this.buildOpts(c.getCoords(a.center),a.radius));this.setMyOptions=function(b){return function(d,k){if(!_.isEqual(d,k))return p.setOptions(b.buildOpts(c.getCoords(a.center),a.radius))}}(this);this.props=this.props.concat([{prop:"center",isColl:!0},{prop:"fill",isColl:!0},"radius"]);this.watchProps();u=this.setEvents(p,a,a);google.maps.event.addListener(p,"radius_changed",function(){a.radius=p.getRadius();return b(function(){return a.$apply()})});google.maps.event.addListener(p,
    "center_changed",function(){angular.isDefined(a.center.type)?(a.center.coordinates[1]=p.getCenter().lat(),a.center.coordinates[0]=p.getCenter().lng()):(a.center.latitude=p.getCenter().lat(),a.center.longitude=p.getCenter().lng());return b(function(){return a.$apply()})});a.$on("$destroy",function(a){return function(){a.removeEvents(u);return p.setMap(null)}}(this));d.info(this)}f(k,a);k.include(c);k.include(h);return k}(g)}])}).call(this);
(function(){angular.module("google-maps.directives.api.models.parent".ns()).factory("DrawingManagerParentModel".ns(),["Logger".ns(),"$timeout",function(d,f){return function(){return function(d,b,c,h){var g;this.scope=d;this.attrs=c;this.map=h;g=new google.maps.drawing.DrawingManager(this.scope.options);g.setMap(this.map);null!=this.scope.control&&(this.scope.control.getDrawingManager=function(a){return function(){return g}}(this));!this.scope["static"]&&this.scope.options&&this.scope.$watch("options",
    function(a){return function(a){return null!=g?g.setOptions(a):void 0}}(this),!0);d.$on("$destroy",function(a){return function(){g.setMap(null);return g=null}}(this))}}()}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.models.parent".ns()).factory("IMarkerParentModel".ns(),["ModelKey".ns(),"Logger".ns(),function(b,c){return function(b){function g(a,b,e,h){this.scope=a;this.element=b;this.attrs=e;this.map=h;this.onDestroy=
    d(this.onDestroy,this);this.onWatch=d(this.onWatch,this);this.watch=d(this.watch,this);this.validateScope=d(this.validateScope,this);g.__super__.constructor.call(this,this.scope);this.$log=c;if(!this.validateScope(a))throw new String("Unable to construct IMarkerParentModel due to invalid scope");this.doClick=angular.isDefined(e.click);null!=a.options&&(this.DEFAULTS=a.options);this.watch("coords",this.scope);this.watch("icon",this.scope);this.watch("options",this.scope);a.$on("$destroy",function(b){return function(){return b.onDestroy(a)}}(this))}
    e(g,b);g.prototype.DEFAULTS={};g.prototype.validateScope=function(a){if(null==a)return this.$log.error(this.constructor.name+": invalid scope used"),!1;a=null!=a.coords;return a?a:(this.$log.error(this.constructor.name+": no valid coords attribute found"),!1)};g.prototype.watch=function(a,b){return b.$watch(a,function(c){return function(d,g){if(!_.isEqual(d,g))return c.onWatch(a,b,d,g)}}(this),!0)};g.prototype.onWatch=function(a,b,c,d){};g.prototype.onDestroy=function(a){throw new String("OnDestroy Not Implemented!!");
    };return g}(b)}])}).call(this);
(function(){var d={}.hasOwnProperty,f=function(e,b){function c(){this.constructor=e}for(var h in b)d.call(b,h)&&(e[h]=b[h]);c.prototype=b.prototype;e.prototype=new c;e.__super__=b.prototype;return e};angular.module("google-maps.directives.api.models.parent".ns()).factory("IWindowParentModel".ns(),["ModelKey".ns(),"GmapUtil".ns(),"Logger".ns(),function(d,b,c){return function(d){function g(a,b,d,e,h,f,z,p){g.__super__.constructor.call(this,a);this.$log=c;this.$timeout=h;this.$compile=f;this.$http=z;
    this.$templateCache=p;this.DEFAULTS={};null!=a.options&&(this.DEFAULTS=a.options)}f(g,d);g.include(b);return g}(d)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.models.parent".ns()).factory("LayerParentModel".ns(),["BaseObject".ns(),"Logger".ns(),"$timeout",function(b,c,h){return function(b){function a(a,b,g,e,h,f){this.scope=a;this.element=b;this.attrs=
    g;this.gMap=e;this.onLayerCreated=null!=h?h:void 0;this.$log=null!=f?f:c;this.createGoogleLayer=d(this.createGoogleLayer,this);null==this.attrs.type?this.$log.info("type attribute for the layer directive is mandatory. Layer creation aborted!!"):(this.createGoogleLayer(),this.doShow=!0,angular.isDefined(this.attrs.show)&&(this.doShow=this.scope.show),this.doShow&&null!=this.gMap&&this.layer.setMap(this.gMap),this.scope.$watch("show",function(a){return function(b,c){if(b!==c)return(a.doShow=b)?a.layer.setMap(a.gMap):
    a.layer.setMap(null)}}(this),!0),this.scope.$watch("options",function(a){return function(b,c){if(b!==c)return a.layer.setMap(null),a.layer=null,a.createGoogleLayer()}}(this),!0),this.scope.$on("$destroy",function(a){return function(){return a.layer.setMap(null)}}(this)))}e(a,b);a.prototype.createGoogleLayer=function(){var a;this.layer=null==this.attrs.options?void 0===this.attrs.namespace?new google.maps[this.attrs.type]:new google.maps[this.attrs.namespace][this.attrs.type]:void 0===this.attrs.namespace?
    new google.maps[this.attrs.type](this.scope.options):new google.maps[this.attrs.namespace][this.attrs.type](this.scope.options);if(null!=this.layer&&null!=this.onLayerCreated&&(a=this.onLayerCreated(this.scope,this.layer)))return a(this.layer)};return a}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.models.parent".ns()).factory("MapTypeParentModel".ns(),["BaseObject".ns(),"Logger".ns(),"$timeout",function(b,c,h){return function(b){function a(a,b,g,e,h){this.scope=a;this.element=b;this.attrs=
    g;this.gMap=e;this.$log=null!=h?h:c;this.hideOverlay=d(this.hideOverlay,this);this.showOverlay=d(this.showOverlay,this);this.refreshMapType=d(this.refreshMapType,this);this.createMapType=d(this.createMapType,this);null==this.attrs.options?this.$log.info("options attribute for the map-type directive is mandatory. Map type creation aborted!!"):(this.id=this.gMap.overlayMapTypesCount=this.gMap.overlayMapTypesCount+1||0,this.doShow=!0,this.createMapType(),angular.isDefined(this.attrs.show)&&(this.doShow=
    this.scope.show),this.doShow&&null!=this.gMap&&this.showOverlay(),this.scope.$watch("show",function(a){return function(b,c){if(b!==c)return(a.doShow=b)?a.showOverlay():a.hideOverlay()}}(this),!0),this.scope.$watch("options",function(a){return function(b,c){if(!_.isEqual(b,c))return a.refreshMapType()}}(this),!0),angular.isDefined(this.attrs.refresh)&&this.scope.$watch("refresh",function(a){return function(b,c){if(!_.isEqual(b,c))return a.refreshMapType()}}(this),!0),this.scope.$on("$destroy",function(a){return function(){a.hideOverlay();
    return a.mapType=null}}(this)))}e(a,b);a.prototype.createMapType=function(){if(null!=this.scope.options.getTile)this.mapType=this.scope.options;else if(null!=this.scope.options.getTileUrl)this.mapType=new google.maps.ImageMapType(this.scope.options);else{this.$log.info("options should provide either getTile or getTileUrl methods. Map type creation aborted!!");return}this.attrs.id&&this.scope.id&&(this.gMap.mapTypes.set(this.scope.id,this.mapType),angular.isDefined(this.attrs.show)||(this.doShow=!1));
    return this.mapType.layerId=this.id};a.prototype.refreshMapType=function(){this.hideOverlay();this.mapType=null;this.createMapType();if(this.doShow&&null!=this.gMap)return this.showOverlay()};a.prototype.showOverlay=function(){return this.gMap.overlayMapTypes.push(this.mapType)};a.prototype.hideOverlay=function(){var a;a=!1;return this.gMap.overlayMapTypes.forEach(function(b){return function(c,d){a||c.layerId!==b.id||(a=!0,b.gMap.overlayMapTypes.removeAt(d))}}(this))};return a}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.models.parent".ns()).factory("MarkersParentModel".ns(),["IMarkerParentModel".ns(),"ModelsWatcher".ns(),"PropMap".ns(),"MarkerChildModel".ns(),"_async".ns(),"ClustererMarkerManager".ns(),"MarkerManager".ns(),
    "$timeout","IMarker".ns(),function(b,c,h,g,a,k,f,n,r){return function(b){function n(a,b,c,k){this.onDestroy=d(this.onDestroy,this);this.newChildMarker=d(this.newChildMarker,this);this.updateChild=d(this.updateChild,this);this.pieceMeal=d(this.pieceMeal,this);this.reBuildMarkers=d(this.reBuildMarkers,this);this.createMarkersFromScratch=d(this.createMarkersFromScratch,this);this.validateScope=d(this.validateScope,this);this.onWatch=d(this.onWatch,this);n.__super__.constructor.call(this,a,b,c,k);this.scope.markerModels=
        new h;this.$log.info(this);this.doRebuildAll=null!=this.scope.doRebuildAll?this.scope.doRebuildAll:!1;this.setIdKey(a);this.scope.$watch("doRebuildAll",function(a){return function(b,c){if(b!==c)return a.doRebuildAll=b}}(this));this.watch("models",a);this.watch("doCluster",a);this.watch("clusterOptions",a);this.watch("clusterEvents",a);this.watch("fit",a);this.watch("idKey",a);this.gMarkerManager=void 0;this.createMarkersFromScratch(a)}e(n,b);n.include(c);n.prototype.onWatch=function(a,b,c,d){"idKey"===
    a&&c!==d&&(this.idKey=c);return this.doRebuildAll?this.reBuildMarkers(b):this.pieceMeal(b)};n.prototype.validateScope=function(a){var b;(b=angular.isUndefined(a.models)||void 0===a.models)&&this.$log.error(this.constructor.name+": no valid models attribute found");return n.__super__.validateScope.call(this,a)||b};n.prototype.createMarkersFromScratch=function(b){b.doCluster?(b.clusterEvents&&(this.clusterInternalOptions=_.once(function(a){return function(){var c,d,k;if(!a.origClusterEvents)return a.origClusterEvents=
    {click:null!=(c=b.clusterEvents)?c.click:void 0,mouseout:null!=(d=b.clusterEvents)?d.mouseout:void 0,mouseover:null!=(k=b.clusterEvents)?k.mouseover:void 0},_.extend(b.clusterEvents,{click:function(b){return a.maybeExecMappedEvent(b,"click")},mouseout:function(b){return a.maybeExecMappedEvent(b,"mouseout")},mouseover:function(b){return a.maybeExecMappedEvent(b,"mouseover")}})}}(this))()),b.clusterOptions||b.clusterEvents?void 0===this.gMarkerManager?this.gMarkerManager=new k(this.map,void 0,b.clusterOptions,
        this.clusterInternalOptions):this.gMarkerManager.opt_options!==b.clusterOptions&&(this.gMarkerManager=new k(this.map,void 0,b.clusterOptions,this.clusterInternalOptions)):this.gMarkerManager=new k(this.map)):this.gMarkerManager=new f(this.map);return a.waitOrGo(this,function(c){return function(){return a.each(b.models,function(a){return c.newChildMarker(a,b)},!1).then(function(){c.gMarkerManager.draw();if(b.fit)return c.gMarkerManager.fit()})}}(this)).then(function(a){return function(){return a.existingPieces=
        void 0}}(this))};n.prototype.reBuildMarkers=function(a){var b;if(a.doRebuild||void 0===a.doRebuild){if(null!=(b=this.scope.markerModels)&&b.length)this.onDestroy(a);return this.createMarkersFromScratch(a)}};n.prototype.pieceMeal=function(b){var c;c=null!=this.existingPieces?!1:a.defaultChunkSize;return null!=this.scope.models&&0<this.scope.models.length&&0<this.scope.markerModels.length?this.figureOutState(this.idKey,b,this.scope.markerModels,this.modelKeyComparison,function(d){return function(k){return a.waitOrGo(d,
        function(){return a.each(k.removals,function(a){if(null!=a)return null!=a.destroy&&a.destroy(),d.scope.markerModels.remove(a.id)},c).then(function(){return a.each(k.adds,function(a){return d.newChildMarker(a,b)},c)}).then(function(){return a.each(k.updates,function(a){return d.updateChild(a.child,a.model)},c)}).then(function(){if(0<k.adds.length||0<k.removals.length||0<k.updates.length)if(d.gMarkerManager.draw(),b.markerModels=d.scope.markerModels,b.fit)return d.gMarkerManager.fit()})}).then(function(){return d.existingPieces=
            void 0})}}(this)):this.reBuildMarkers(b)};n.prototype.updateChild=function(a,b){if(null==b[this.idKey])this.$log.error("Marker model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");else return a.setMyScope(b,a.model,!1)};n.prototype.newChildMarker=function(a,b){var c,d;if(null==a[this.idKey])this.$log.error("Marker model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");
    else return this.$log.info("child",c,"markers",this.scope.markerModels),c=b.$new(!1),c.events=b.events,d={},_.each(r.keys,function(a,c){return d[c]=b[c]}),c=new g(c,a,d,this.map,this.DEFAULTS,this.doClick,this.gMarkerManager,!1),this.scope.markerModels.put(a[this.idKey],c),c};n.prototype.onDestroy=function(b){return a.waitOrGo(this,function(a){return function(){null!=a.gMarkerManager&&a.gMarkerManager.clear();_.each(a.scope.markerModels.values(),function(a){if(null!=a)return a.destroy()});delete a.scope.markerModels;
        a.scope.markerModels=new h;return Promise.resolve()}}(this))};n.prototype.maybeExecMappedEvent=function(a,b){var c;if(_.isFunction(null!=(c=this.scope.clusterEvents)?c[b]:void 0)&&(c=this.mapClusterToMarkerModels(a),this.origClusterEvents[b]))return this.origClusterEvents[b](c.cluster,c.mapped)};n.prototype.mapClusterToMarkerModels=function(a){var b;b=a.getMarkers().values().map(function(a){return function(b){return a.scope.markerModels[b.key].model}}(this));return{cluster:a,mapped:b}};return n}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.models.parent".ns()).factory("PolylinesParentModel".ns(),["$timeout","Logger".ns(),"ModelKey".ns(),"ModelsWatcher".ns(),"PropMap".ns(),"PolylineChildModel".ns(),"_async".ns(),function(b,c,h,g,a,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           k,f){return function(b){function h(b,k,g,e,f){this.scope=b;this.element=k;this.attrs=g;this.gMap=e;this.defaults=f;this.modelKeyComparison=d(this.modelKeyComparison,this);this.setChildScope=d(this.setChildScope,this);this.createChild=d(this.createChild,this);this.pieceMeal=d(this.pieceMeal,this);this.createAllNew=d(this.createAllNew,this);this.watchIdKey=d(this.watchIdKey,this);this.createChildScopes=d(this.createChildScopes,this);this.watchOurScope=d(this.watchOurScope,this);this.watchDestroy=d(this.watchDestroy,
    this);this.rebuildAll=d(this.rebuildAll,this);this.doINeedToWipe=d(this.doINeedToWipe,this);this.watchModels=d(this.watchModels,this);this.watch=d(this.watch,this);h.__super__.constructor.call(this,b);this.$log=c;this.plurals=new a;this.scopePropNames="path stroke clickable draggable editable geodesic icons visible".split(" ");_.each(this.scopePropNames,function(a){return function(b){return a[b+"Key"]=void 0}}(this));this.models=void 0;this.firstTime=!0;this.$log.info(this);this.watchOurScope(b);
    this.createChildScopes()}e(h,b);h.include(g);h.prototype.watch=function(a,b,c){return a.$watch(b,function(a){return function(d,k){if(d!==k)return a[c]="function"===typeof d?d():d,f.waitOrGo(a,function(){return f.each(_.values(a.plurals),function(d){return d.scope[b]="self"===a[c]?d:d[a[c]]})})}}(this))};h.prototype.watchModels=function(a){return a.$watch("models",function(b){return function(c,d){if(!_.isEqual(c,d))return b.doINeedToWipe(c)?b.rebuildAll(a,!0,!0):b.createChildScopes(!1)}}(this),!0)};
    h.prototype.doINeedToWipe=function(a){a=null!=a?0===a.length:!0;return 0<this.plurals.length&&a};h.prototype.rebuildAll=function(b,c,d){return f.waitOrGo(this,function(b){return function(){return f.each(b.plurals.values(),function(a){return a.destroy()}).then(function(){d&&delete b.plurals;b.plurals=new a;if(c)return b.createChildScopes()})}}(this))};h.prototype.watchDestroy=function(a){return a.$on("$destroy",function(b){return function(){return b.rebuildAll(a,!1,!0)}}(this))};h.prototype.watchOurScope=
        function(a){return _.each(this.scopePropNames,function(b){return function(c){var d;d=c+"Key";b[d]="function"===typeof a[c]?a[c]():a[c];return b.watch(a,c,d)}}(this))};h.prototype.createChildScopes=function(a){null==a&&(a=!0);if(angular.isUndefined(this.scope.models))this.$log.error("No models to create polylines from! I Need direct models!");else if(null!=this.gMap&&null!=this.scope.models)return this.watchIdKey(this.scope),a?this.createAllNew(this.scope,!1):this.pieceMeal(this.scope,!1)};h.prototype.watchIdKey=
        function(a){this.setIdKey(a);return a.$watch("idKey",function(b){return function(c,d){if(c!==d&&null==c)return b.idKey=c,b.rebuildAll(a,!0,!0)}}(this))};h.prototype.createAllNew=function(a,b){null==b&&(b=!1);this.models=a.models;this.firstTime&&(this.watchModels(a),this.watchDestroy(a));return f.waitOrGo(this,function(b){return function(){return f.each(a.models,function(a){return b.createChild(a,b.gMap)})}}(this)).then(function(a){return function(){a.firstTime=!1;return a.existingPieces=void 0}}(this))};
    h.prototype.pieceMeal=function(a,b){null==b&&(b=!0);this.models=a.models;return null!=a&&null!=a.models&&0<a.models.length&&0<this.plurals.length?this.figureOutState(this.idKey,a,this.plurals,this.modelKeyComparison,function(a){return function(b){return f.waitOrGo(a,function(){return f.each(b.removals,function(b){var c;c=a.plurals[b];if(null!=c)return c.destroy(),a.plurals.remove(b)}).then(function(){return f.each(b.adds,function(b){return a.createChild(b,a.gMap)})}).then(function(){return a.existingPieces=
        void 0})})}}(this)):this.rebuildAll(this.scope,!0,!0)};h.prototype.createChild=function(a,b){var c,d;d=this.scope.$new(!1);this.setChildScope(d,a);d.$watch("model",function(a){return function(b,c){if(b!==c)return a.setChildScope(d,b)}}(this),!0);d["static"]=this.scope["static"];c=new k(d,this.attrs,b,this.defaults,a);if(null==a[this.idKey])this.$log.error("Polyline model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");else return this.plurals.put(a[this.idKey],
        c),c};h.prototype.setChildScope=function(a,b){_.each(this.scopePropNames,function(c){return function(d){var k;k=d+"Key";k="self"===c[k]?b:b[c[k]];if(k!==a[d])return a[d]=k}}(this));return a.model=b};h.prototype.modelKeyComparison=function(a,b){return _.isEqual(this.evalModelHandle(a,this.scope.path),this.evalModelHandle(b,this.scope.path))};return h}(h)}])}).call(this);
(function(){var d={}.hasOwnProperty,f=function(e,b){function c(){this.constructor=e}for(var h in b)d.call(b,h)&&(e[h]=b[h]);c.prototype=b.prototype;e.prototype=new c;e.__super__=b.prototype;return e};angular.module("google-maps.directives.api.models.parent".ns()).factory("RectangleParentModel".ns(),["Logger".ns(),"GmapUtil".ns(),"EventsHelper".ns(),"RectangleOptionsBuilder".ns(),function(d,b,c,h){return function(g){function a(a,b,c,g,h){var f,p,u,l,v,t,w,A,x,B,C;this.scope=a;this.attrs=c;this.map=
    g;this.DEFAULTS=h;f=void 0;l=!1;A=[];w=void 0;v=function(a){return function(){if(a.isTrue(c.fit))return a.fitMapBounds(a.map,f)}}(this);u=function(b){return function(){var c,g;if(null!=a.bounds&&null!=(null!=(c=a.bounds)?c.sw:void 0)&&null!=(null!=(g=a.bounds)?g.ne:void 0)&&b.validateBoundPoints(a.bounds))return f=b.convertBoundPoints(a.bounds),d.info("new new bounds created: "+x);if(null!=a.bounds.getNorthEast&&null!=a.bounds.getSouthWest)return f=a.bounds;if("undefined"!==typeof bound&&null!==bound)return d.error("Invalid bounds for newValue: "+
JSON.stringify(a.bounds))}}(this);u();x=new google.maps.Rectangle(this.buildOpts(f));d.info("rectangle created: "+x);B=!1;C=function(b){return function(){var b,c,d;b=x.getBounds();c=b.getNorthEast();d=b.getSouthWest();if(!B)return _.defer(function(){return a.$apply(function(a){null!=a.bounds&&null!=a.bounds.sw&&null!=a.bounds.ne&&(a.bounds.ne={latitude:c.lat(),longitude:c.lng()},a.bounds.sw={latitude:d.lat(),longitude:d.lng()});if(null!=a.bounds.getNorthEast&&null!=a.bounds.getSouthWest)return a.bounds=
    b})})}}(this);t=function(a){return function(){v();a.removeEvents(A);A.push(google.maps.event.addListener(x,"dragstart",function(){return l=!0}));A.push(google.maps.event.addListener(x,"dragend",function(){l=!1;return C()}));return A.push(google.maps.event.addListener(x,"bounds_changed",function(){if(!l)return C()}))}}(this);p=function(a){return function(){a.removeEvents(A);null!=w&&a.removeEvents(w);return x.setMap(null)}}(this);null!=f&&t();a.$watch("bounds",function(a,b){var c;if(!(_.isEqual(a,
        b)&&null!=f||l))if(B=!0,null==a)p();else if(null==f?c=!0:v(),u(),x.setBounds(f),B=!1,c&&null!=f)return t()},!0);this.setMyOptions=function(a){return function(b,c){if(!_.isEqual(b,c)&&null!=f&&null!=b)return x.setOptions(a.buildOpts(f))}}(this);this.props.push("bounds");this.watchProps(this.props);null!=c.events&&(w=this.setEvents(x,a,a),a.$watch("events",function(b){return function(c,d){if(!_.isEqual(c,d))return null!=w&&b.removeEvents(w),w=b.setEvents(x,a,a)}}(this)));a.$on("$destroy",function(a){return function(){return p()}}(this));
    d.info(this)}f(a,g);a.include(b);a.include(c);return a}(h)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.models.parent".ns()).factory("SearchBoxParentModel".ns(),["BaseObject".ns(),"Logger".ns(),"EventsHelper".ns(),"$timeout","$http","$templateCache",function(b,c,h,g,a,k){return function(a){function b(a,
k,g,e,h,f,m){this.scope=a;this.element=k;this.attrs=g;this.gMap=e;this.ctrlPosition=h;this.template=f;this.$log=null!=m?m:c;this.getBounds=d(this.getBounds,this);this.setBounds=d(this.setBounds,this);this.createSearchBox=d(this.createSearchBox,this);this.addToParentDiv=d(this.addToParentDiv,this);this.addAsMapControl=d(this.addAsMapControl,this);this.init=d(this.init,this);null==this.attrs.template?this.$log.error("template attribute for the search-box directive is mandatory. Places Search Box creation aborted!!"):
    (a=angular.element("<div></div>"),a.append(this.template),this.input=a.find("input")[0],this.init())}e(b,a);b.include(h);b.prototype.init=function(){this.createSearchBox();null!=this.attrs.parentdiv?this.addToParentDiv():this.addAsMapControl();this.listener=google.maps.event.addListener(this.searchBox,"places_changed",function(a){return function(){return a.places=a.searchBox.getPlaces()}}(this));this.listeners=this.setEvents(this.searchBox,this.scope,this.scope);this.$log.info(this);this.scope.$watch("options",
    function(a){return function(b,c){if(angular.isObject(b)&&null!=b.bounds)return a.setBounds(b.bounds)}}(this),!0);return this.scope.$on("$destroy",function(a){return function(){return a.searchBox=null}}(this))};b.prototype.addAsMapControl=function(){return this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].push(this.input)};b.prototype.addToParentDiv=function(){this.parentDiv=angular.element(document.getElementById(this.scope.parentdiv));return this.parentDiv.append(this.input)};b.prototype.createSearchBox=
    function(){return this.searchBox=new google.maps.places.SearchBox(this.input,this.scope.options)};b.prototype.setBounds=function(a){if(angular.isUndefined(a.isEmpty))this.$log.error("Error: SearchBoxParentModel setBounds. Bounds not an instance of LatLngBounds.");else if(!1===a.isEmpty()&&null!=this.searchBox)return this.searchBox.setBounds(a)};b.prototype.getBounds=function(){return this.searchBox.getBounds()};return b}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api.models.parent".ns()).factory("WindowsParentModel".ns(),["IWindowParentModel".ns(),"ModelsWatcher".ns(),"PropMap".ns(),"WindowChildModel".ns(),"Linked".ns(),"_async".ns(),"Logger".ns(),"$timeout",
    "$compile","$http","$templateCache","$interpolate",function(b,c,h,g,a,k,f,n,r,y,z,p){return function(b){function l(b,c,k,g,e,f){this.gMap=e;this.markersScope=f;this.interpolateContent=d(this.interpolateContent,this);this.setChildScope=d(this.setChildScope,this);this.createWindow=d(this.createWindow,this);this.setContentKeys=d(this.setContentKeys,this);this.pieceMealWindows=d(this.pieceMealWindows,this);this.createAllNewWindows=d(this.createAllNewWindows,this);this.watchIdKey=d(this.watchIdKey,this);
        this.createChildScopesWindows=d(this.createChildScopesWindows,this);this.watchOurScope=d(this.watchOurScope,this);this.watchDestroy=d(this.watchDestroy,this);this.rebuildAll=d(this.rebuildAll,this);this.doINeedToWipe=d(this.doINeedToWipe,this);this.watchModels=d(this.watchModels,this);this.go=d(this.go,this);l.__super__.constructor.call(this,b,c,k,g,n,r,y,z);this.windows=new h;this.scopePropNames="coords template templateUrl templateParameter isIconVisibleOnClick closeClick options show".split(" ");
        _.each(this.scopePropNames,function(a){return function(b){return a[b+"Key"]=void 0}}(this));this.linked=new a(b,c,k,g);this.isIconVisibleOnClick=this.contentKeys=this.models=void 0;this.firstWatchModels=this.firstTime=!0;this.$log.info(this);this.parentScope=void 0;this.go(b)}e(l,b);l.include(c);l.prototype.go=function(a){this.watchOurScope(a);this.doRebuildAll=null!=this.scope.doRebuildAll?this.scope.doRebuildAll:!1;a.$watch("doRebuildAll",function(a){return function(b,c){if(b!==c)return a.doRebuildAll=
        b}}(this));return this.createChildScopesWindows()};l.prototype.watchModels=function(a){return a.$watch("models",function(b){return function(c,d){var k;if(!_.isEqual(c,d)||b.firstWatchModels){b.firstWatchModels=!1;if(b.doRebuildAll||b.doINeedToWipe(c))return b.rebuildAll(a,!0,!0);k=0===b.windows.length;return null!=b.existingPieces?b.existingPieces.then(function(){return b.createChildScopesWindows(k)}):b.createChildScopesWindows(k)}}}(this))};l.prototype.doINeedToWipe=function(a){a=null!=a?0===a.length:
        !0;return 0<this.windows.length&&a};l.prototype.rebuildAll=function(a,b,c){return k.waitOrGo(this,function(a){return function(){return k.each(a.windows.values(),function(a){return a.destroy()}).then(function(){c&&delete a.windows;a.windows=new h;b&&a.createChildScopesWindows();return Promise.resolve()})}}(this))};l.prototype.watchDestroy=function(a){return a.$on("$destroy",function(b){return function(){b.firstWatchModels=!0;b.firstTime=!0;return b.rebuildAll(a,!1,!0)}}(this))};l.prototype.watchOurScope=
        function(a){return _.each(this.scopePropNames,function(b){return function(c){return b[c+"Key"]="function"===typeof a[c]?a[c]():a[c]}}(this))};l.prototype.createChildScopesWindows=function(a){var b,c;null==a&&(a=!0);this.isIconVisibleOnClick=!0;angular.isDefined(this.linked.attrs.isiconvisibleonclick)&&(this.isIconVisibleOnClick=this.linked.scope.isIconVisibleOnClick);if(angular.isUndefined(this.linked.scope.models)&&(void 0===this.markersScope||void 0===(null!=(b=this.markersScope)?b.markerModels:
            void 0)||void 0===(null!=(c=this.markersScope)?c.models:void 0)))this.$log.error("No models to create windows from! Need direct models or models derrived from markers!");else if(null!=this.gMap){if(null!=this.linked.scope.models)return this.watchIdKey(this.linked.scope),a?this.createAllNewWindows(this.linked.scope,!1):this.pieceMealWindows(this.linked.scope,!1);this.parentScope=this.markersScope;this.watchIdKey(this.parentScope);return a?this.createAllNewWindows(this.markersScope,!0,"markerModels",
        !1):this.pieceMealWindows(this.markersScope,!0,"markerModels",!1)}};l.prototype.watchIdKey=function(a){this.setIdKey(a);return a.$watch("idKey",function(b){return function(c,d){if(c!==d&&null==c)return b.idKey=c,b.rebuildAll(a,!0,!0)}}(this))};l.prototype.createAllNewWindows=function(a,b,c,d){null==c&&(c="models");null==d&&(d=!1);this.models=a.models;this.firstTime&&(this.watchModels(a),this.watchDestroy(a));this.setContentKeys(a.models);return k.waitOrGo(this,function(d){return function(){return k.each(a.models,
        function(k){var g,e;g=b?null!=(e=a[c][[k[d.idKey]]])?e.gMarker:void 0:void 0;return d.createWindow(k,g,d.gMap)})}}(this)).then(function(a){return function(){return a.firstTime=!1}}(this))};l.prototype.pieceMealWindows=function(a,b,c,d){var g;null==c&&(c="models");null==d&&(d=!0);g=null!=this.existingPieces?!1:k.defaultChunkSize;this.models=a.models;return null!=a&&null!=a.models&&0<a.models.length&&0<this.windows.length?this.figureOutState(this.idKey,a,this.windows,this.modelKeyComparison,function(b){return function(d){return k.waitOrGo(b,
        function(){return k.each(d.removals,function(a){if(null!=a&&(b.windows.remove(a.id),null!=a.destroy))return a.destroy(!0)},g).then(function(){return k.each(d.adds,function(d){var k,g;k=null!=(g=a[c][d[b.idKey]])?g.gMarker:void 0;if(!k)throw"Gmarker undefined";return b.createWindow(d,k,b.gMap)},g)})}).then(function(){return b.existingPieces=void 0})["catch"](function(a){return f.error("Error while pieceMealing Windows!")})}}(this)):this.rebuildAll(this.scope,!0,!0)};l.prototype.setContentKeys=function(a){if(0<
        a.length)return this.contentKeys=Object.keys(a[0])};l.prototype.createWindow=function(a,b,c){var d,k,e;d=this.linked.scope.$new(!1);this.setChildScope(d,a);d.$watch("model",function(a){return function(b,c){var k;if(b!==c&&(a.setChildScope(d,b),a.markersScope))return a.windows[b[a.idKey]].markerCtrl=null!=(k=a.markersScope.markerModels[b[a.idKey]])?k.gMarker:void 0}}(this),!0);k={html:function(b){return function(){return b.interpolateContent(b.linked.element.html(),a)}}(this)};this.DEFAULTS=this.markersScope?
    a[this.optionsKey]||{}:this.DEFAULTS;e=this.createWindowOptions(b,d,k.html(),this.DEFAULTS);b=new g(a,d,e,this.isIconVisibleOnClick,c,b,k,!1,!0);if(null==a[this.idKey])this.$log.error("Window model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");else return this.windows.put(a[this.idKey],b),b};l.prototype.setChildScope=function(a,b){_.each(this.scopePropNames,function(c){return function(d){var k;k=d+"Key";k="self"===c[k]?b:b[c[k]];
        if(k!==a[d])return a[d]=k}}(this));return a.model=b};l.prototype.interpolateContent=function(a,b){var c,d,k,g,e,h;if(void 0!==this.contentKeys&&0!==this.contentKeys.length){c=p(a);d={};h=this.contentKeys;g=0;for(e=h.length;g<e;g++)k=h[g],d[k]=b[k];return c(d)}};return l}(b)}])}).call(this);
(function(){angular.module("google-maps.directives.api".ns()).factory("Circle".ns(),["ICircle".ns(),"CircleParentModel".ns(),function(d,f){return _.extend(d,{link:function(d,b,c,h){return h.getScope().deferred.promise.then(function(g){return function(a){return new f(d,b,c,a)}}(this))}})}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("Control".ns(),["IControl".ns(),"$http","$templateCache","$compile","$controller","GoogleMapApi".ns(),function(b,c,h,g,a,k){return function(f){function n(){this.link=d(this.link,this);
    n.__super__.constructor.call(this)}e(n,f);n.prototype.link=function(d,e,f,m){return k.then(function(k){return function(e){var f,n;if(angular.isUndefined(d.template))k.$log.error("mapControl: could not find a valid template property");else{f=angular.isDefined(d.index&&!isNaN(parseInt(d.index)))?parseInt(d.index):void 0;n=angular.isDefined(d.position)?d.position.toUpperCase().replace(/-/g,"_"):"TOP_CENTER";if(e.ControlPosition[n])return b.mapPromise(d,m).then(function(b){var e,m;e=void 0;m=angular.element("<div></div>");
    return c.get(d.template,{cache:h}).success(function(b){var c;c=d.$new();m.append(b);f&&(m[0].index=f);angular.isDefined(d.controller)&&(b=a(d.controller,{$scope:c}),m.children().data("$ngControllerController",b));return e=g(m.contents())(c)}).error(function(a){return k.$log.error("mapControl: template could not be found")}).then(function(){return b.controls[google.maps.ControlPosition[n]].push(e[0])})});k.$log.error("mapControl: invalid position property")}}}(this))};return n}(b)}])}).call(this);
(function(){angular.module("google-maps.directives.api".ns()).factory("DrawingManager".ns(),["IDrawingManager".ns(),"DrawingManagerParentModel".ns(),function(d,f){return _.extend(d,{link:function(d,b,c,h){return h.getScope().deferred.promise.then(function(g){return function(a){return new f(d,b,c,a)}}(this))}})}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("ApiFreeDrawPolygons".ns(),["Logger".ns(),"BaseObject".ns(),"CtrlHandle".ns(),"DrawFreeHandChildModel".ns(),function(b,c,h,g){return function(a){function c(){this.link=d(this.link,
    this);return c.__super__.constructor.apply(this,arguments)}e(c,a);c.include(h);c.prototype.restrict="EMA";c.prototype.replace=!0;c.prototype.require="^"+"GoogleMap".ns();c.prototype.scope={polygons:"=",draw:"="};c.prototype.link=function(a,c,d,k){return this.mapPromise(a,k).then(function(c){return function(c){var d,k;if(!a.polygons)return b.error("No polygons to bind to!");if(!_.isArray(a.polygons))return b.error("Free Draw Polygons must be of type Array!");d=new g(c,a.originalMapOpts);k=void 0;return a.draw=
    function(){"function"===typeof k&&k();return d.engage(a.polygons).then(function(){var b;b=!0;return k=a.$watch("polygons",function(a,c){var d;if(b)b=!1;else return d=_.differenceObjects(c,a),d.forEach(function(a){return a.setMap(null)})})})}}}(this))};return c}(c)}])}).call(this);
(function(){angular.module("google-maps.directives.api".ns()).service("ICircle".ns(),[function(){return{restrict:"EA",replace:!0,require:"^"+"GoogleMap".ns(),scope:{center:"=center",radius:"=radius",stroke:"=stroke",fill:"=fill",clickable:"=",draggable:"=",editable:"=",geodesic:"=",icons:"=icons",visible:"=",events:"="}}}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("IControl".ns(),["BaseObject".ns(),"Logger".ns(),"CtrlHandle".ns(),function(b,c,h){return function(b){function a(){this.link=d(this.link,this);this.restrict="EA";this.replace=!0;this.require=
    "^"+"GoogleMap".ns();this.scope={template:"@template",position:"@position",controller:"@controller",index:"@index"};this.$log=c}e(a,b);a.extend(h);a.prototype.link=function(a,b,c,d){throw new Exception("Not implemented!!");};return a}(b)}])}).call(this);(function(){angular.module("google-maps.directives.api".ns()).service("IDrawingManager".ns(),[function(){return{restrict:"EA",replace:!0,require:"^"+"GoogleMap".ns(),scope:{"static":"@",control:"=",options:"="}}}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("IMarker".ns(),["Logger".ns(),"BaseObject".ns(),"CtrlHandle".ns(),function(b,c,h){return function(c){function a(){this.link=d(this.link,this);this.$log=b;this.restrict="EMA";this.require=
    "^"+"GoogleMap".ns();this.priority=-1;this.replace=this.transclude=!0;this.scope=a.keys}e(a,c);a.keys={coords:"=coords",icon:"=icon",click:"&click",options:"=options",events:"=events",fit:"=fit",idKey:"=idkey",control:"=control"};a.extend(h);a.prototype.link=function(a,b,c,d){if(!d)throw Error("No Map Control! Marker Directive Must be inside the map!");};return a}(c)}])}).call(this);
(function(){var d={}.hasOwnProperty,f=function(e,b){function c(){this.constructor=e}for(var h in b)d.call(b,h)&&(e[h]=b[h]);c.prototype=b.prototype;e.prototype=new c;e.__super__=b.prototype;return e};angular.module("google-maps.directives.api".ns()).factory("IPolygon".ns(),["GmapUtil".ns(),"BaseObject".ns(),"Logger".ns(),"CtrlHandle".ns(),function(d,b,c,h){return function(b){function a(){}f(a,b);a.include(d);a.extend(h);a.prototype.restrict="EMA";a.prototype.replace=!0;a.prototype.require="^"+"GoogleMap".ns();
    a.prototype.scope={path:"=path",stroke:"=stroke",clickable:"=",draggable:"=",editable:"=",geodesic:"=",fill:"=",icons:"=icons",visible:"=","static":"=",events:"=",zIndex:"=zindex",fit:"=",control:"=control"};a.prototype.DEFAULTS={};a.prototype.$log=c;return a}(b)}])}).call(this);
(function(){var d={}.hasOwnProperty,f=function(e,b){function c(){this.constructor=e}for(var h in b)d.call(b,h)&&(e[h]=b[h]);c.prototype=b.prototype;e.prototype=new c;e.__super__=b.prototype;return e};angular.module("google-maps.directives.api".ns()).factory("IPolyline".ns(),["GmapUtil".ns(),"BaseObject".ns(),"Logger".ns(),"CtrlHandle".ns(),function(d,b,c,h){return function(b){function a(){}f(a,b);a.include(d);a.extend(h);a.prototype.restrict="EMA";a.prototype.replace=!0;a.prototype.require="^"+"GoogleMap".ns();
    a.prototype.scope={path:"=",stroke:"=",clickable:"=",draggable:"=",editable:"=",geodesic:"=",icons:"=",visible:"=","static":"=",fit:"=",events:"="};a.prototype.DEFAULTS={};a.prototype.$log=c;return a}(b)}])}).call(this);(function(){angular.module("google-maps.directives.api".ns()).service("IRectangle".ns(),[function(){return{restrict:"EMA",require:"^"+"GoogleMap".ns(),replace:!0,scope:{bounds:"=",stroke:"=",clickable:"=",draggable:"=",editable:"=",fill:"=",visible:"=",events:"="}}}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("IWindow".ns(),["BaseObject".ns(),"ChildEvents".ns(),"Logger".ns(),function(b,c,f){return function(b){function a(){this.link=d(this.link,this);this.restrict="EMA";this.template=void 0;
    this.transclude=!0;this.priority=-100;this.require="^"+"GoogleMap".ns();this.replace=!0;this.scope={coords:"=coords",template:"=template",templateUrl:"=templateurl",templateParameter:"=templateparameter",isIconVisibleOnClick:"=isiconvisibleonclick",closeClick:"&closeclick",options:"=options",control:"=control",show:"=show"};this.$log=f}e(a,b);a.include(c);a.prototype.link=function(a,b,c,d){throw new Exception("Not Implemented!!");};return a}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("Map".ns(),["$timeout","$q","Logger".ns(),"GmapUtil".ns(),"BaseObject".ns(),"CtrlHandle".ns(),"IsReady".ns(),"uuid".ns(),"ExtendGWin".ns(),"ExtendMarkerClusterer".ns(),"GoogleMapsUtilV3".ns(),
    "GoogleMapApi".ns(),function(b,c,f,g,a,k,m,n,r,y,z,p){var u,l;u=void 0;l=[z,r,y];return function(a){function b(){this.link=d(this.link,this);this.controller=["$scope",function(a){var b;b=k.handle(a);a.ctrlType="Map";a.deferred.promise.then(function(){return l.forEach(function(a){return a.init()})});b.getMap=function(){return a.map};return _.extend(this,b)}]}e(b,a);b.include(g);b.prototype.restrict="EMA";b.prototype.transclude=!0;b.prototype.replace=!1;b.prototype.template='<div class="angular-google-map"><div class="angular-google-map-container"></div><div ng-transclude style="display: none"></div></div>';
        b.prototype.scope={center:"=",zoom:"=",dragging:"=",control:"=",options:"=",events:"=",styles:"=",bounds:"="};b.prototype.link=function(a,b,c){return p.then(function(d){return function(k){var g,e,r,p,l,y,z,t,q;u={mapTypeId:k.MapTypeId.ROADMAP};z=m.spawn();l=function(){return z.deferred.resolve({instance:z.instance,map:q})};if(d.validateCoords(a.center)){if(angular.isDefined(a.zoom)){k=angular.element(b);k.addClass("angular-google-map");p={options:{}};c.options&&(p.options=a.options);c.styles&&(p.styles=
            a.styles);c.type&&(t=c.type.toUpperCase(),google.maps.MapTypeId.hasOwnProperty(t)?p.mapTypeId=google.maps.MapTypeId[c.type.toUpperCase()]:f.error("angular-google-maps: invalid map type '"+c.type+"'"));r=angular.extend({},u,p,{center:d.getCoords(a.center),zoom:a.zoom,bounds:a.bounds});q=new google.maps.Map(k.find("div")[1],r);q["_id".ns()]=n.generate();g=!1;q?(a.deferred.resolve(q),l()):google.maps.event.addListener(q,"tilesloaded ",function(b){a.deferred.resolve(b);return l()});google.maps.event.addListener(q,
            "dragstart",function(){g=!0;return _.defer(function(){return a.$apply(function(a){if(null!=a.dragging)return a.dragging=g})})});google.maps.event.addListener(q,"dragend",function(){g=!1;return _.defer(function(){return a.$apply(function(a){if(null!=a.dragging)return a.dragging=g})})});google.maps.event.addListener(q,"drag",function(){var b;b=q.center;return _.defer(function(){return a.$apply(function(a){if(angular.isDefined(a.center.type))return a.center.coordinates[1]=b.lat(),a.center.coordinates[0]=
            b.lng();a.center.latitude=b.lat();return a.center.longitude=b.lng()})})});google.maps.event.addListener(q,"zoom_changed",function(){if(a.zoom!==q.zoom)return _.defer(function(){return a.$apply(function(a){return a.zoom=q.zoom})})});y=!1;google.maps.event.addListener(q,"center_changed",function(){var b;b=q.center;if(!y)return _.defer(function(){return a.$apply(function(a){if(!q.dragging)if(angular.isDefined(a.center.type)){if(a.center.coordinates[1]!==b.lat()&&(a.center.coordinates[1]=b.lat()),a.center.coordinates[0]!==
            b.lng())return a.center.coordinates[0]=b.lng()}else if(a.center.latitude!==b.lat()&&(a.center.latitude=b.lat()),a.center.longitude!==b.lng())return a.center.longitude=b.lng()})})});google.maps.event.addListener(q,"idle",function(){var b,c,d;b=q.getBounds();c=b.getNorthEast();d=b.getSouthWest();return _.defer(function(){return a.$apply(function(a){if(null!==a.bounds&&void 0!==a.bounds&&void 0!==a.bounds)return a.bounds.northeast={latitude:c.lat(),longitude:c.lng()},a.bounds.southwest={latitude:d.lat(),
            longitude:d.lng()}})})});if(angular.isDefined(a.events)&&null!==a.events&&angular.isObject(a.events))for(e in k=function(b){return function(){return a.events[b].apply(a,[q,b,arguments])}},a.events)a.events.hasOwnProperty(e)&&angular.isFunction(a.events[e])&&google.maps.event.addListener(q,e,k(e));q.getOptions=function(){return r};a.map=q;null!=c.control&&null!=a.control&&(a.control.refresh=function(a){if(null!=q&&(google.maps.event.trigger(q,"resize"),null!=(null!=a?a.latitude:void 0)&&null!=(null!=
            a?a.latitude:void 0)))return a=d.getCoords(a),d.isTrue(c.pan)?q.panTo(a):q.setCenter(a)},a.control.getGMap=function(){return q},a.control.getMapOptions=function(){return r});a.$watch("center",function(b,k){var e;e=d.getCoords(b);if(e.lat()!==q.center.lat()||e.lng()!==q.center.lng())return y=!0,g||(d.validateCoords(b)||f.error("Invalid center for newValue: "+JSON.stringify(b)),d.isTrue(c.pan)&&a.zoom===q.zoom?q.panTo(e):q.setCenter(e)),y=!1},!0);a.$watch("zoom",function(a,b){if(a!==q.zoom)return _.defer(function(){return q.setZoom(a)})});
            a.$watch("bounds",function(a,b){var c,d;if(a!==b)if(null==a.northeast.latitude||null==a.northeast.longitude||null==a.southwest.latitude||null==a.southwest.longitude)f.error("Invalid map bounds for new value: "+JSON.stringify(a));else return c=new google.maps.LatLng(a.northeast.latitude,a.northeast.longitude),d=new google.maps.LatLng(a.southwest.latitude,a.southwest.longitude),c=new google.maps.LatLngBounds(d,c),q.fitBounds(c)});a.$watch("options",function(a,b){if(!_.isEqual(a,b)&&(p.options=a,null!=
                q))return q.setOptions(p)},!0);return a.$watch("styles",function(a,b){if(!_.isEqual(a,b)&&(p.styles=a,null!=q))return q.setOptions(p)},!0)}f.error("angular-google-maps: map zoom property not set")}else f.error("angular-google-maps: could not find a valid center property")}}(this))};return b}(a)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("Marker".ns(),["IMarker".ns(),"MarkerChildModel".ns(),"MarkerManager".ns(),function(b,c,f){return function(g){function a(){this.link=d(this.link,this);a.__super__.constructor.call(this);
    this.template='<span class="angular-google-map-marker" ng-transclude></span>';this.$log.info(this)}e(a,g);a.prototype.controller=["$scope","$element",function(c,d){c.ctrlType="Marker";return _.extend(a,b.handle(c,d))}];a.prototype.link=function(a,d,g,e){return b.mapPromise(a,e).then(function(d){return function(g){var e;d.gMarkerManager||(d.gMarkerManager=new f(g));e=_.keys(b.keys);e=_.object(e,e);d.promise=(new c(a,a,e,g,{},!0,d.gMarkerManager,!1,!1)).deferred.promise.then(function(b){return a.deferred.resolve(b)});
    if(null!=a.control)return a.control.getGMarkers=d.gMarkerManager.getGMarkers}}(this))};return a}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("Markers".ns(),["IMarker".ns(),"MarkersParentModel".ns(),"_sync".ns(),function(b,c,f){return function(g){function a(b){this.link=d(this.link,this);a.__super__.constructor.call(this,
    b);this.template='<span class="angular-google-map-markers" ng-transclude></span>';this.scope=_.extend(this.scope||{},{idKey:"=idkey",doRebuildAll:"=dorebuildall",models:"=models",doCluster:"=docluster",clusterOptions:"=clusteroptions",clusterEvents:"=clusterevents"});this.$log.info(this)}e(a,g);a.prototype.controller=["$scope","$element",function(a,c){a.ctrlType="Markers";return _.extend(this,b.handle(a,c))}];a.prototype.link=function(a,d,g,e){var f,h;f=void 0;h=function(b){return function(){null!=
a.control&&(a.control.getGMarkers=function(){var a;return null!=(a=f.gMarkerManager)?a.getGMarkers():void 0},a.control.getChildMarkers=function(){return f.markerModels});return a.deferred.resolve()}}(this);return b.mapPromise(a,e).then(function(b){return function(b){f=new c(a,d,g,b);return f.existingPieces.then(function(){return h()})}}(this))};return a}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("Polygon".ns(),["IPolygon".ns(),"$timeout","array-sync".ns(),"PolygonChildModel".ns(),function(b,c,f,g){return function(a){function c(){this.link=d(this.link,this);return c.__super__.constructor.apply(this,
    arguments)}e(c,a);c.prototype.link=function(a,c,d,k){var e;e=[];c=b.mapPromise(a,k);null!=a.control&&(a.control.getInstance=this,a.control.polygons=e,a.control.promise=c);return c.then(function(b){return function(c){return e.push(new g(a,d,c,b.DEFAULTS))}}(this))};return c}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("Polyline".ns(),["IPolyline".ns(),"$timeout","array-sync".ns(),"PolylineChildModel".ns(),function(b,c,f,g){return function(a){function c(){this.link=d(this.link,this);return c.__super__.constructor.apply(this,
    arguments)}e(c,a);c.prototype.link=function(a,c,d,k){if(angular.isUndefined(a.path)||null===a.path||!this.validatePath(a.path))this.$log.error("polyline: no valid path attribute found");else return b.mapPromise(a,k).then(function(b){return function(c){return new g(a,d,c,b.DEFAULTS)}}(this))};return c}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("Polylines".ns(),["IPolyline".ns(),"$timeout","array-sync".ns(),"PolylinesParentModel".ns(),function(b,c,f,g){return function(a){function b(){this.link=d(this.link,this);b.__super__.constructor.call(this);
    this.scope.idKey="=idkey";this.scope.models="=models";this.$log.info(this)}e(b,a);b.prototype.link=function(a,b,c,d){if(angular.isUndefined(a.path)||null===a.path)this.$log.error("polylines: no valid path attribute found");else{if(a.models)return d.getScope().deferred.promise.then(function(d){return function(k){return new g(a,b,c,k,d.DEFAULTS)}}(this));this.$log.error("polylines: no models found to create from")}};return b}(b)}])}).call(this);
(function(){angular.module("google-maps.directives.api".ns()).factory("Rectangle".ns(),["Logger".ns(),"GmapUtil".ns(),"IRectangle".ns(),"RectangleParentModel".ns(),function(d,f,e,b){return _.extend(e,{link:function(c,d,g,a){return a.getScope().deferred.promise.then(function(a){return function(a){return new b(c,d,g,a)}}(this))}})}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("Window".ns(),["IWindow".ns(),"GmapUtil".ns(),"WindowChildModel".ns(),function(b,c,f){return function(b){function a(){this.link=d(this.link,this);a.__super__.constructor.call(this);
    this.require=["^"+"GoogleMap".ns(),"^?"+"Marker".ns()];this.template='<span class="angular-google-maps-window" ng-transclude></span>';this.$log.info(this);this.childWindows=[]}e(a,b);a.include(c);a.prototype.link=function(a,b,c,d){var g,e,f;g=d[0].getScope();e=1<d.length&&null!=d[1]?d[1]:void 0;f=null!=e?e.getScope():void 0;return g.deferred.promise.then(function(d){return function(g){var h;h=!0;angular.isDefined(c.isiconvisibleonclick)&&(h=a.isIconVisibleOnClick);if(e)return f.deferred.promise.then(function(c){return d.init(a,
    b,h,g,f,c)});d.init(a,b,h,g)}}(this))};a.prototype.init=function(a,b,c,d,g,e){var p,u,l;u=null!=a.options?a.options:{};l=null!=a&&this.validateCoords(a.coords);null!=g&&g.$watch("coords",function(a){return function(b,c){null==e||p.markerCtrl||(p.markerCtrl=e,p.handleClick(!0));if(!a.validateCoords(b))return p.hideWindow();if(!angular.equals(b,c))return p.getLatestPosition(a.getCoords(b))}}(this),!0);g=l?this.createWindowOptions(e,a,b.html(),u):u;null!=d&&(p=new f({},a,g,c,d,e,b),this.childWindows.push(p),
    a.$on("$destroy",function(a){return function(){return a.childWindows=_.withoutObjects(a.childWindows,[p],function(a,b){return a.scope.$id===b.scope.$id})}}(this)));null!=a.control&&(a.control.getGWindows=function(a){return function(){return a.childWindows.map(function(a){return a.gWin})}}(this),a.control.getChildWindows=function(a){return function(){return a.childWindows}}(this),a.control.showWindow=function(a){return function(){return a.childWindows.map(function(a){return a.showWindow()})}}(this),
    a.control.hideWindow=function(a){return function(){return a.childWindows.map(function(a){return a.hideWindow()})}}(this));if(null!=this.onChildCreation&&null!=p)return this.onChildCreation(p)};return a}(b)}])}).call(this);
(function(){var d=function(b,c){return function(){return b.apply(c,arguments)}},f={}.hasOwnProperty,e=function(b,c){function d(){this.constructor=b}for(var g in c)f.call(c,g)&&(b[g]=c[g]);d.prototype=c.prototype;b.prototype=new d;b.__super__=c.prototype;return b};angular.module("google-maps.directives.api".ns()).factory("Windows".ns(),["IWindow".ns(),"WindowsParentModel".ns(),function(b,c){return function(b){function g(){this.init=d(this.init,this);this.link=d(this.link,this);g.__super__.constructor.call(this);
    this.require=["^"+"GoogleMap".ns(),"^?"+"Markers".ns()];this.template='<span class="angular-google-maps-windows" ng-transclude></span>';this.scope.idKey="=idkey";this.scope.doRebuildAll="=dorebuildall";this.scope.models="=models";this.$log.debug(this)}e(g,b);g.prototype.link=function(a,b,c,d){var g,e,f;g=d[0].getScope();e=1<d.length&&null!=d[1]?d[1]:void 0;f=null!=e?e.getScope():void 0;return g.deferred.promise.then(function(g){return function(e){var h;return((null!=f?null!=(h=f.deferred)?h.promise:
    void 0:void 0)||Promise.resolve()).then(function(){var h,l;return(h=null!=(l=g.parentModel)?l.existingPieces:void 0)?h.then(function(){return g.init(a,b,c,d,e,f)}):g.init(a,b,c,d,e,f)})}}(this))};g.prototype.init=function(a,b,d,g,e,f){var h;h=new c(a,b,d,g,e,f);if(null!=a.control)return a.control.getGWindows=function(a){return function(){return h.windows.map(function(a){return a.gWin})}}(this),a.control.getChildWindows=function(a){return function(){return h.windows}}(this)};return g}(b)}])}).call(this);
(function(){angular.module("google-maps".ns()).directive("GoogleMap".ns(),["Map".ns(),function(d){return new d}])}).call(this);(function(){angular.module("google-maps".ns()).directive("Marker".ns(),["$timeout","Marker".ns(),function(d,f){return new f(d)}])}).call(this);(function(){angular.module("google-maps".ns()).directive("Markers".ns(),["$timeout","Markers".ns(),function(d,f){return new f(d)}])}).call(this);
(function(){angular.module("google-maps".ns()).directive("Polygon".ns(),["Polygon".ns(),function(d){return new d}])}).call(this);(function(){angular.module("google-maps".ns()).directive("Circle".ns(),["Circle".ns(),function(d){return d}])}).call(this);(function(){angular.module("google-maps".ns()).directive("Polyline".ns(),["Polyline".ns(),function(d){return new d}])}).call(this);(function(){angular.module("google-maps".ns()).directive("Polylines".ns(),["Polylines".ns(),function(d){return new d}])}).call(this);
(function(){angular.module("google-maps".ns()).directive("Rectangle".ns(),["Logger".ns(),"Rectangle".ns(),function(d,f){return f}])}).call(this);(function(){angular.module("google-maps".ns()).directive("Window".ns(),["$timeout","$compile","$http","$templateCache","Window".ns(),function(d,f,e,b,c){return new c(d,f,e,b)}])}).call(this);
(function(){angular.module("google-maps".ns()).directive("Windows".ns(),["$timeout","$compile","$http","$templateCache","$interpolate","Windows".ns(),function(d,f,e,b,c,h){return new h(d,f,e,b,c)}])}).call(this);
(function(){var d=function(d,e){return function(){return d.apply(e,arguments)}};angular.module("google-maps".ns()).directive("Layer".ns(),["$timeout","Logger".ns(),"LayerParentModel".ns(),function(f,e,b){return new (function(){function c(){this.link=d(this.link,this);this.$log=e;this.restrict="EMA";this.require="^"+"GoogleMap".ns();this.priority=-1;this.transclude=!0;this.template='<span class="angular-google-map-layer" ng-transclude></span>';this.replace=!0;this.scope={show:"=show",type:"=type",
    namespace:"=namespace",options:"=options",onCreated:"&oncreated"}}c.prototype.link=function(c,d,a,e){return e.getScope().deferred.promise.then(function(e){return function(e){return null!=c.onCreated?new b(c,d,a,e,c.onCreated):new b(c,d,a,e)}}(this))};return c}())}])}).call(this);(function(){angular.module("google-maps".ns()).directive("MapControl".ns(),["Control".ns(),function(d){return new d}])}).call(this);
(function(){angular.module("google-maps".ns()).directive("DrawingManager".ns(),["DrawingManager".ns(),function(d){return d}])}).call(this);(function(){angular.module("google-maps".ns()).directive("FreeDrawPolygons".ns(),["ApiFreeDrawPolygons".ns(),function(d){return new d}])}).call(this);
(function(){var d=function(d,e){return function(){return d.apply(e,arguments)}};angular.module("google-maps".ns()).directive("MapType".ns(),["$timeout","Logger".ns(),"MapTypeParentModel".ns(),function(f,e,b){return new (function(){function c(){this.link=d(this.link,this);this.$log=e;this.restrict="EMA";this.require="^"+"GoogleMap".ns();this.priority=-1;this.transclude=!0;this.template='<span class="angular-google-map-layer" ng-transclude></span>';this.replace=!0;this.scope={show:"=show",options:"=options",
    refresh:"=refresh",id:"@"}}c.prototype.link=function(c,d,a,e){return e.getScope().deferred.promise.then(function(e){return function(e){return new b(c,d,a,e)}}(this))};return c}())}])}).call(this);
(function(){var d=function(d,e){return function(){return d.apply(e,arguments)}};angular.module("google-maps".ns()).directive("SearchBox".ns(),["GoogleMapApi".ns(),"Logger".ns(),"SearchBoxParentModel".ns(),"$http","$templateCache",function(f,e,b,c,h){return new (function(){function g(){this.link=d(this.link,this);this.$log=e;this.restrict="EMA";this.require="^"+"GoogleMap".ns();this.priority=-1;this.transclude=!0;this.template='<span class="angular-google-map-search" ng-transclude></span>';this.replace=
    !0;this.scope={template:"=template",position:"=position",options:"=options",events:"=events",parentdiv:"=parentdiv"}}g.prototype.link=function(a,d,e,g){return f.then(function(f){return function(y){return c.get(a.template,{cache:h}).success(function(c){return g.getScope().deferred.promise.then(function(g){var h;h=angular.isDefined(a.position)?a.position.toUpperCase().replace(/-/g,"_"):"TOP_LEFT";if(y.ControlPosition[h])return new b(a,d,e,g,h,c);f.$log.error("searchBox: invalid position property")})})}}(this))};
    return g}())}])}).call(this);angular.module("google-maps.wrapped".ns()).service("uuid".ns(),function(){function d(){}d.generate=function(){var f=d._gri,e=d._ha;return e(f(32),8)+"-"+e(f(16),4)+"-"+e(16384|f(12),4)+"-"+e(32768|f(14),4)+"-"+e(f(48),12)};d._gri=function(d){return 0>d?NaN:30>=d?0|Math.random()*(1<<d):53>=d?(0|1073741824*Math.random())+1073741824*(0|Math.random()*(1<<d-30)):NaN};d._ha=function(d,e){for(var b=d.toString(16),c=e-b.length,h="0";0<c;c>>>=1,h+=h)c&1&&(b=h+b);return b};return d});
angular.module("google-maps.wrapped".ns()).service("GoogleMapsUtilV3".ns(),function(){return{init:_.once(function(){function d(a){a=a||{};google.maps.OverlayView.apply(this,arguments);this.content_=a.content||"";this.disableAutoPan_=a.disableAutoPan||!1;this.maxWidth_=a.maxWidth||0;this.pixelOffset_=a.pixelOffset||new google.maps.Size(0,0);this.position_=a.position||new google.maps.LatLng(0,0);this.zIndex_=a.zIndex||null;this.boxClass_=a.boxClass||"infoBox";this.boxStyle_=a.boxStyle||{};this.closeBoxMargin_=
    a.closeBoxMargin||"2px";this.closeBoxURL_=a.closeBoxURL||"http://www.google.com/intl/en_us/mapfiles/close.gif";""===a.closeBoxURL&&(this.closeBoxURL_="");this.infoBoxClearance_=a.infoBoxClearance||new google.maps.Size(1,1);"undefined"===typeof a.visible&&(a.visible="undefined"===typeof a.isHidden?!0:!a.isHidden);this.isHidden_=!a.visible;this.alignBottom_=a.alignBottom||!1;this.pane_=a.pane||"floatPane";this.enableEventPropagation_=a.enableEventPropagation||!1;this.fixedWidthSet_=this.eventListeners_=
    this.contextListener_=this.moveListener_=this.closeListener_=this.div_=null}function f(a,b){a.getMarkerClusterer().extend(f,google.maps.OverlayView);this.cluster_=a;this.className_=a.getMarkerClusterer().getClusterClass();this.styles_=b;this.sums_=this.div_=this.center_=null;this.visible_=!1;this.setMap(a.getMap())}function e(a){this.markerClusterer_=a;this.map_=a.getMap();this.gridSize_=a.getGridSize();this.minClusterSize_=a.getMinimumClusterSize();this.averageCenter_=a.getAverageCenter();this.markers_=
    [];this.bounds_=this.center_=null;this.clusterIcon_=new f(this,a.getStyles())}function b(a,c,d){this.extend(b,google.maps.OverlayView);c=c||[];d=d||{};this.markers_=[];this.clusters_=[];this.listeners_=[];this.activeMap_=null;this.ready_=!1;this.gridSize_=d.gridSize||60;this.minClusterSize_=d.minimumClusterSize||2;this.maxZoom_=d.maxZoom||null;this.styles_=d.styles||[];this.title_=d.title||"";this.zoomOnClick_=!0;void 0!==d.zoomOnClick&&(this.zoomOnClick_=d.zoomOnClick);this.averageCenter_=!1;void 0!==
d.averageCenter&&(this.averageCenter_=d.averageCenter);this.ignoreHidden_=!1;void 0!==d.ignoreHidden&&(this.ignoreHidden_=d.ignoreHidden);this.enableRetinaIcons_=!1;void 0!==d.enableRetinaIcons&&(this.enableRetinaIcons_=d.enableRetinaIcons);this.imagePath_=d.imagePath||b.IMAGE_PATH;this.imageExtension_=d.imageExtension||b.IMAGE_EXTENSION;this.imageSizes_=d.imageSizes||b.IMAGE_SIZES;this.calculator_=d.calculator||b.CALCULATOR;this.batchSize_=d.batchSize||b.BATCH_SIZE;this.batchSizeIE_=d.batchSizeIE||
b.BATCH_SIZE_IE;this.clusterClass_=d.clusterClass||"cluster";-1!==navigator.userAgent.toLowerCase().indexOf("msie")&&(this.batchSize_=this.batchSizeIE_);this.setupStyles_();this.addMarkers(c,!0);this.setMap(a)}function c(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a}function h(a,b,c){this.marker_=a;this.handCursorURL_=a.handCursorURL;this.labelDiv_=document.createElement("div");this.labelDiv_.style.cssText="position: absolute; overflow: hidden;";
    this.eventDiv_=document.createElement("div");this.eventDiv_.style.cssText=this.labelDiv_.style.cssText;this.eventDiv_.setAttribute("onselectstart","return false;");this.eventDiv_.setAttribute("ondragstart","return false;");this.crossDiv_=h.getSharedCross(b)}function g(a){a=a||{};a.labelContent=a.labelContent||"";a.labelAnchor=a.labelAnchor||new google.maps.Point(0,0);a.labelClass=a.labelClass||"markerLabels";a.labelStyle=a.labelStyle||{};a.labelInBackground=a.labelInBackground||!1;"undefined"===typeof a.labelVisible&&
(a.labelVisible=!0);"undefined"===typeof a.raiseOnDrag&&(a.raiseOnDrag=!0);"undefined"===typeof a.clickable&&(a.clickable=!0);"undefined"===typeof a.draggable&&(a.draggable=!1);"undefined"===typeof a.optimized&&(a.optimized=!1);a.crossImage=a.crossImage||"http"+("https:"===document.location.protocol?"s":"")+"://maps.gstatic.com/intl/en_us/mapfiles/drag_cross_67_16.png";a.handCursor=a.handCursor||"http"+("https:"===document.location.protocol?"s":"")+"://maps.gstatic.com/intl/en_us/mapfiles/closedhand_8_8.cur";
    a.optimized=!1;this.label=new h(this,a.crossImage,a.handCursor);google.maps.Marker.apply(this,arguments)}d.prototype=new google.maps.OverlayView;d.prototype.createInfoBoxDiv_=function(){var a,b,c=this,d=function(a){a.cancelBubble=!0;a.stopPropagation&&a.stopPropagation()},e=function(a){a.returnValue=!1;a.preventDefault&&a.preventDefault();c.enableEventPropagation_||d(a)};if(!this.div_){this.div_=document.createElement("div");this.setBoxStyle_();"undefined"===typeof this.content_.nodeType?this.div_.innerHTML=
    this.getCloseBoxImg_()+this.content_:(this.div_.innerHTML=this.getCloseBoxImg_(),this.div_.appendChild(this.content_));this.getPanes()[this.pane_].appendChild(this.div_);this.addClickHandler_();this.div_.style.width?this.fixedWidthSet_=!0:0!==this.maxWidth_&&this.div_.offsetWidth>this.maxWidth_?(this.div_.style.width=this.maxWidth_,this.div_.style.overflow="auto",this.fixedWidthSet_=!0):(a=this.getBoxWidths_(),this.div_.style.width=this.div_.offsetWidth-a.left-a.right+"px",this.fixedWidthSet_=!1);
    this.panBox_(this.disableAutoPan_);if(!this.enableEventPropagation_){this.eventListeners_=[];b="mousedown mouseover mouseout mouseup click dblclick touchstart touchend touchmove".split(" ");for(a=0;a<b.length;a++)this.eventListeners_.push(google.maps.event.addDomListener(this.div_,b[a],d));this.eventListeners_.push(google.maps.event.addDomListener(this.div_,"mouseover",function(a){this.style.cursor="default"}))}this.contextListener_=google.maps.event.addDomListener(this.div_,"contextmenu",e);google.maps.event.trigger(this,
        "domready")}};d.prototype.getCloseBoxImg_=function(){var a="";""!==this.closeBoxURL_&&(a="<img"+(" src='"+this.closeBoxURL_+"'"),a+=" align=right style='",a+=" position: relative;",a+=" cursor: pointer;",a+=" margin: "+this.closeBoxMargin_+";",a+="'>");return a};d.prototype.addClickHandler_=function(){var a;""!==this.closeBoxURL_?(a=this.div_.firstChild,this.closeListener_=google.maps.event.addDomListener(a,"click",this.getCloseClickHandler_())):this.closeListener_=null};d.prototype.getCloseClickHandler_=
    function(){var a=this;return function(b){b.cancelBubble=!0;b.stopPropagation&&b.stopPropagation();google.maps.event.trigger(a,"closeclick");a.close()}};d.prototype.panBox_=function(a){var b=0,c=0;if(!a&&(a=this.getMap(),a instanceof google.maps.Map)){a.getBounds().contains(this.position_)||a.setCenter(this.position_);a.getBounds();var d=a.getDiv(),e=d.offsetWidth,d=d.offsetHeight,g=this.pixelOffset_.width,f=this.pixelOffset_.height,h=this.div_.offsetWidth,u=this.div_.offsetHeight,l=this.infoBoxClearance_.width,
    v=this.infoBoxClearance_.height,t=this.getProjection().fromLatLngToContainerPixel(this.position_);t.x<-g+l?b=t.x+g-l:t.x+h+g+l>e&&(b=t.x+h+g+l-e);this.alignBottom_?t.y<-f+v+u?c=t.y+f-v-u:t.y+f+v>d&&(c=t.y+f+v-d):t.y<-f+v?c=t.y+f-v:t.y+u+f+v>d&&(c=t.y+u+f+v-d);if(0!==b||0!==c)a.getCenter(),a.panBy(b,c)}};d.prototype.setBoxStyle_=function(){var a,b;if(this.div_){this.div_.className=this.boxClass_;this.div_.style.cssText="";b=this.boxStyle_;for(a in b)b.hasOwnProperty(a)&&(this.div_.style[a]=b[a]);"undefined"!==
typeof this.div_.style.opacity&&""!==this.div_.style.opacity&&(this.div_.style.filter="alpha(opacity="+100*this.div_.style.opacity+")");this.div_.style.position="absolute";this.div_.style.visibility="hidden";null!==this.zIndex_&&(this.div_.style.zIndex=this.zIndex_)}};d.prototype.getBoxWidths_=function(){var a,b={top:0,bottom:0,left:0,right:0};a=this.div_;if(document.defaultView&&document.defaultView.getComputedStyle){if(a=a.ownerDocument.defaultView.getComputedStyle(a,""))b.top=parseInt(a.borderTopWidth,
    10)||0,b.bottom=parseInt(a.borderBottomWidth,10)||0,b.left=parseInt(a.borderLeftWidth,10)||0,b.right=parseInt(a.borderRightWidth,10)||0}else document.documentElement.currentStyle&&a.currentStyle&&(b.top=parseInt(a.currentStyle.borderTopWidth,10)||0,b.bottom=parseInt(a.currentStyle.borderBottomWidth,10)||0,b.left=parseInt(a.currentStyle.borderLeftWidth,10)||0,b.right=parseInt(a.currentStyle.borderRightWidth,10)||0);return b};d.prototype.onRemove=function(){this.div_&&(this.div_.parentNode.removeChild(this.div_),
    this.div_=null)};d.prototype.draw=function(){this.createInfoBoxDiv_();var a=this.getProjection().fromLatLngToDivPixel(this.position_);this.div_.style.left=a.x+this.pixelOffset_.width+"px";this.alignBottom_?this.div_.style.bottom=-(a.y+this.pixelOffset_.height)+"px":this.div_.style.top=a.y+this.pixelOffset_.height+"px";this.div_.style.visibility=this.isHidden_?"hidden":"visible"};d.prototype.setOptions=function(a){"undefined"!==typeof a.boxClass&&(this.boxClass_=a.boxClass,this.setBoxStyle_());"undefined"!==
typeof a.boxStyle&&(this.boxStyle_=a.boxStyle,this.setBoxStyle_());"undefined"!==typeof a.content&&this.setContent(a.content);"undefined"!==typeof a.disableAutoPan&&(this.disableAutoPan_=a.disableAutoPan);"undefined"!==typeof a.maxWidth&&(this.maxWidth_=a.maxWidth);"undefined"!==typeof a.pixelOffset&&(this.pixelOffset_=a.pixelOffset);"undefined"!==typeof a.alignBottom&&(this.alignBottom_=a.alignBottom);"undefined"!==typeof a.position&&this.setPosition(a.position);"undefined"!==typeof a.zIndex&&this.setZIndex(a.zIndex);
    "undefined"!==typeof a.closeBoxMargin&&(this.closeBoxMargin_=a.closeBoxMargin);"undefined"!==typeof a.closeBoxURL&&(this.closeBoxURL_=a.closeBoxURL);"undefined"!==typeof a.infoBoxClearance&&(this.infoBoxClearance_=a.infoBoxClearance);"undefined"!==typeof a.isHidden&&(this.isHidden_=a.isHidden);"undefined"!==typeof a.visible&&(this.isHidden_=!a.visible);"undefined"!==typeof a.enableEventPropagation&&(this.enableEventPropagation_=a.enableEventPropagation);this.div_&&this.draw()};d.prototype.setContent=
    function(a){this.content_=a;this.div_&&(this.closeListener_&&(google.maps.event.removeListener(this.closeListener_),this.closeListener_=null),this.fixedWidthSet_||(this.div_.style.width=""),"undefined"===typeof a.nodeType?this.div_.innerHTML=this.getCloseBoxImg_()+a:(this.div_.innerHTML=this.getCloseBoxImg_(),this.div_.appendChild(a)),this.fixedWidthSet_||(this.div_.style.width=this.div_.offsetWidth+"px","undefined"===typeof a.nodeType?this.div_.innerHTML=this.getCloseBoxImg_()+a:(this.div_.innerHTML=
        this.getCloseBoxImg_(),this.div_.appendChild(a))),this.addClickHandler_());google.maps.event.trigger(this,"content_changed")};d.prototype.setPosition=function(a){this.position_=a;this.div_&&this.draw();google.maps.event.trigger(this,"position_changed")};d.prototype.setZIndex=function(a){this.zIndex_=a;this.div_&&(this.div_.style.zIndex=a);google.maps.event.trigger(this,"zindex_changed")};d.prototype.setVisible=function(a){this.isHidden_=!a;this.div_&&(this.div_.style.visibility=this.isHidden_?"hidden":
    "visible")};d.prototype.getContent=function(){return this.content_};d.prototype.getPosition=function(){return this.position_};d.prototype.getZIndex=function(){return this.zIndex_};d.prototype.getVisible=function(){return"undefined"===typeof this.getMap()||null===this.getMap()?!1:!this.isHidden_};d.prototype.show=function(){this.isHidden_=!1;this.div_&&(this.div_.style.visibility="visible")};d.prototype.hide=function(){this.isHidden_=!0;this.div_&&(this.div_.style.visibility="hidden")};d.prototype.open=
    function(a,b){var c=this;b&&(this.position_=b.getPosition(),this.moveListener_=google.maps.event.addListener(b,"position_changed",function(){c.setPosition(this.getPosition())}));this.setMap(a);this.div_&&this.panBox_()};d.prototype.close=function(){var a;this.closeListener_&&(google.maps.event.removeListener(this.closeListener_),this.closeListener_=null);if(this.eventListeners_){for(a=0;a<this.eventListeners_.length;a++)google.maps.event.removeListener(this.eventListeners_[a]);this.eventListeners_=
    null}this.moveListener_&&(google.maps.event.removeListener(this.moveListener_),this.moveListener_=null);this.contextListener_&&(google.maps.event.removeListener(this.contextListener_),this.contextListener_=null);this.setMap(null)};f.prototype.onAdd=function(){var a=this,b,c;this.div_=document.createElement("div");this.div_.className=this.className_;this.visible_&&this.show();this.getPanes().overlayMouseTarget.appendChild(this.div_);this.boundsChangedListener_=google.maps.event.addListener(this.getMap(),
    "bounds_changed",function(){c=b});google.maps.event.addDomListener(this.div_,"mousedown",function(){b=!0;c=!1});google.maps.event.addDomListener(this.div_,"click",function(d){b=!1;if(!c){var e,g,f=a.cluster_.getMarkerClusterer();google.maps.event.trigger(f,"click",a.cluster_);google.maps.event.trigger(f,"clusterclick",a.cluster_);f.getZoomOnClick()&&(g=f.getMaxZoom(),e=a.cluster_.getBounds(),f.getMap().fitBounds(e),setTimeout(function(){f.getMap().fitBounds(e);null!==g&&f.getMap().getZoom()>g&&f.getMap().setZoom(g+
1)},100));d.cancelBubble=!0;d.stopPropagation&&d.stopPropagation()}});google.maps.event.addDomListener(this.div_,"mouseover",function(){var b=a.cluster_.getMarkerClusterer();google.maps.event.trigger(b,"mouseover",a.cluster_)});google.maps.event.addDomListener(this.div_,"mouseout",function(){var b=a.cluster_.getMarkerClusterer();google.maps.event.trigger(b,"mouseout",a.cluster_)})};f.prototype.onRemove=function(){this.div_&&this.div_.parentNode&&(this.hide(),google.maps.event.removeListener(this.boundsChangedListener_),
    google.maps.event.clearInstanceListeners(this.div_),this.div_.parentNode.removeChild(this.div_),this.div_=null)};f.prototype.draw=function(){if(this.visible_){var a=this.getPosFromLatLng_(this.center_);this.div_.style.top=a.y+"px";this.div_.style.left=a.x+"px"}};f.prototype.hide=function(){this.div_&&(this.div_.style.display="none");this.visible_=!1};f.prototype.show=function(){if(this.div_){var a="",b=this.backgroundPosition_.split(" "),c=parseInt(b[0].trim(),10),b=parseInt(b[1].trim(),10),a=this.getPosFromLatLng_(this.center_);
    this.div_.style.cssText=this.createCss(a);a="<img src='"+this.url_+"' style='position: absolute; top: "+b+"px; left: "+c+"px; ";this.cluster_.getMarkerClusterer().enableRetinaIcons_||(a+="clip: rect("+-1*b+"px, "+(-1*c+this.width_)+"px, "+(-1*b+this.height_)+"px, "+-1*c+"px);");this.div_.innerHTML=a+"'><div style='position: absolute;top: "+this.anchorText_[0]+"px;left: "+this.anchorText_[1]+"px;color: "+this.textColor_+";font-size: "+this.textSize_+"px;font-family: "+this.fontFamily_+";font-weight: "+
    this.fontWeight_+";font-style: "+this.fontStyle_+";text-decoration: "+this.textDecoration_+";text-align: center;width: "+this.width_+"px;line-height:"+this.height_+"px;'>"+this.sums_.text+"</div>";this.div_.title="undefined"===typeof this.sums_.title||""===this.sums_.title?this.cluster_.getMarkerClusterer().getTitle():this.sums_.title;this.div_.style.display=""}this.visible_=!0};f.prototype.useStyle=function(a){this.sums_=a;a=Math.max(0,a.index-1);a=Math.min(this.styles_.length-1,a);a=this.styles_[a];
    this.url_=a.url;this.height_=a.height;this.width_=a.width;this.anchorText_=a.anchorText||[0,0];this.anchorIcon_=a.anchorIcon||[parseInt(this.height_/2,10),parseInt(this.width_/2,10)];this.textColor_=a.textColor||"black";this.textSize_=a.textSize||11;this.textDecoration_=a.textDecoration||"none";this.fontWeight_=a.fontWeight||"bold";this.fontStyle_=a.fontStyle||"normal";this.fontFamily_=a.fontFamily||"Arial,sans-serif";this.backgroundPosition_=a.backgroundPosition||"0 0"};f.prototype.setCenter=function(a){this.center_=
    a};f.prototype.createCss=function(a){var b=[];b.push("cursor: pointer;");b.push("position: absolute; top: "+a.y+"px; left: "+a.x+"px;");b.push("width: "+this.width_+"px; height: "+this.height_+"px;");return b.join("")};f.prototype.getPosFromLatLng_=function(a){a=this.getProjection().fromLatLngToDivPixel(a);a.x-=this.anchorIcon_[1];a.y-=this.anchorIcon_[0];a.x=parseInt(a.x,10);a.y=parseInt(a.y,10);return a};e.prototype.getSize=function(){return this.markers_.length};e.prototype.getMarkers=function(){return this.markers_};
    e.prototype.getCenter=function(){return this.center_};e.prototype.getMap=function(){return this.map_};e.prototype.getMarkerClusterer=function(){return this.markerClusterer_};e.prototype.getBounds=function(){var a,b=new google.maps.LatLngBounds(this.center_,this.center_),c=this.getMarkers();for(a=0;a<c.length;a++)b.extend(c[a].getPosition());return b};e.prototype.remove=function(){this.clusterIcon_.setMap(null);this.markers_=[];delete this.markers_};e.prototype.addMarker=function(a){var b,c;if(this.isMarkerAlreadyAdded_(a))return!1;
        this.center_?this.averageCenter_&&(c=this.markers_.length+1,b=(this.center_.lat()*(c-1)+a.getPosition().lat())/c,c=(this.center_.lng()*(c-1)+a.getPosition().lng())/c,this.center_=new google.maps.LatLng(b,c),this.calculateBounds_()):(this.center_=a.getPosition(),this.calculateBounds_());a.isAdded=!0;this.markers_.push(a);b=this.markers_.length;c=this.markerClusterer_.getMaxZoom();if(null!==c&&this.map_.getZoom()>c)a.getMap()!==this.map_&&a.setMap(this.map_);else if(b<this.minClusterSize_)a.getMap()!==
        this.map_&&a.setMap(this.map_);else if(b===this.minClusterSize_)for(a=0;a<b;a++)this.markers_[a].setMap(null);else a.setMap(null);this.updateIcon_();return!0};e.prototype.isMarkerInClusterBounds=function(a){return this.bounds_.contains(a.getPosition())};e.prototype.calculateBounds_=function(){var a=new google.maps.LatLngBounds(this.center_,this.center_);this.bounds_=this.markerClusterer_.getExtendedBounds(a)};e.prototype.updateIcon_=function(){var a=this.markers_.length,b=this.markerClusterer_.getMaxZoom();
        null!==b&&this.map_.getZoom()>b?this.clusterIcon_.hide():a<this.minClusterSize_?this.clusterIcon_.hide():(a=this.markerClusterer_.getStyles().length,a=this.markerClusterer_.getCalculator()(this.markers_,a),this.clusterIcon_.setCenter(this.center_),this.clusterIcon_.useStyle(a),this.clusterIcon_.show())};e.prototype.isMarkerAlreadyAdded_=function(a){var b;if(this.markers_.indexOf)return-1!==this.markers_.indexOf(a);for(b=0;b<this.markers_.length;b++)if(a===this.markers_[b])return!0;return!1};b.prototype.onAdd=
        function(){var a=this;this.activeMap_=this.getMap();this.ready_=!0;this.repaint();this.listeners_=[google.maps.event.addListener(this.getMap(),"zoom_changed",function(){a.resetViewport_(!1);this.getZoom()!==(this.get("minZoom")||0)&&this.getZoom()!==this.get("maxZoom")||google.maps.event.trigger(this,"idle")}),google.maps.event.addListener(this.getMap(),"idle",function(){a.redraw_()})]};b.prototype.onRemove=function(){var a;for(a=0;a<this.markers_.length;a++)this.markers_[a].getMap()!==this.activeMap_&&
    this.markers_[a].setMap(this.activeMap_);for(a=0;a<this.clusters_.length;a++)this.clusters_[a].remove();this.clusters_=[];for(a=0;a<this.listeners_.length;a++)google.maps.event.removeListener(this.listeners_[a]);this.listeners_=[];this.activeMap_=null;this.ready_=!1};b.prototype.draw=function(){};b.prototype.setupStyles_=function(){var a,b;if(!(0<this.styles_.length))for(a=0;a<this.imageSizes_.length;a++)b=this.imageSizes_[a],this.styles_.push({url:this.imagePath_+(a+1)+"."+this.imageExtension_,height:b,
        width:b})};b.prototype.fitMapToMarkers=function(){var a,b=this.getMarkers(),c=new google.maps.LatLngBounds;for(a=0;a<b.length;a++)c.extend(b[a].getPosition());this.getMap().fitBounds(c)};b.prototype.getGridSize=function(){return this.gridSize_};b.prototype.setGridSize=function(a){this.gridSize_=a};b.prototype.getMinimumClusterSize=function(){return this.minClusterSize_};b.prototype.setMinimumClusterSize=function(a){this.minClusterSize_=a};b.prototype.getMaxZoom=function(){return this.maxZoom_};b.prototype.setMaxZoom=
        function(a){this.maxZoom_=a};b.prototype.getStyles=function(){return this.styles_};b.prototype.setStyles=function(a){this.styles_=a};b.prototype.getTitle=function(){return this.title_};b.prototype.setTitle=function(a){this.title_=a};b.prototype.getZoomOnClick=function(){return this.zoomOnClick_};b.prototype.setZoomOnClick=function(a){this.zoomOnClick_=a};b.prototype.getAverageCenter=function(){return this.averageCenter_};b.prototype.setAverageCenter=function(a){this.averageCenter_=a};b.prototype.getIgnoreHidden=
        function(){return this.ignoreHidden_};b.prototype.setIgnoreHidden=function(a){this.ignoreHidden_=a};b.prototype.getEnableRetinaIcons=function(){return this.enableRetinaIcons_};b.prototype.setEnableRetinaIcons=function(a){this.enableRetinaIcons_=a};b.prototype.getImageExtension=function(){return this.imageExtension_};b.prototype.setImageExtension=function(a){this.imageExtension_=a};b.prototype.getImagePath=function(){return this.imagePath_};b.prototype.setImagePath=function(a){this.imagePath_=a};b.prototype.getImageSizes=
        function(){return this.imageSizes_};b.prototype.setImageSizes=function(a){this.imageSizes_=a};b.prototype.getCalculator=function(){return this.calculator_};b.prototype.setCalculator=function(a){this.calculator_=a};b.prototype.getBatchSizeIE=function(){return this.batchSizeIE_};b.prototype.setBatchSizeIE=function(a){this.batchSizeIE_=a};b.prototype.getClusterClass=function(){return this.clusterClass_};b.prototype.setClusterClass=function(a){this.clusterClass_=a};b.prototype.getMarkers=function(){return this.markers_};
    b.prototype.getTotalMarkers=function(){return this.markers_.length};b.prototype.getClusters=function(){return this.clusters_};b.prototype.getTotalClusters=function(){return this.clusters_.length};b.prototype.addMarker=function(a,b){this.pushMarkerTo_(a);b||this.redraw_()};b.prototype.addMarkers=function(a,b){for(var c in a)a.hasOwnProperty(c)&&this.pushMarkerTo_(a[c]);b||this.redraw_()};b.prototype.pushMarkerTo_=function(a){if(a.getDraggable()){var b=this;google.maps.event.addListener(a,"dragend",
        function(){b.ready_&&(this.isAdded=!1,b.repaint())})}a.isAdded=!1;this.markers_.push(a)};b.prototype.removeMarker=function(a,b){var c=this.removeMarker_(a);!b&&c&&this.repaint();return c};b.prototype.removeMarkers=function(a,b){var c,d,e=!1;for(c=0;c<a.length;c++)d=this.removeMarker_(a[c]),e=e||d;!b&&e&&this.repaint();return e};b.prototype.removeMarker_=function(a){var b,c=-1;if(this.markers_.indexOf)c=this.markers_.indexOf(a);else for(b=0;b<this.markers_.length;b++)if(a===this.markers_[b]){c=b;break}if(-1===
        c)return!1;a.setMap(null);this.markers_.splice(c,1);return!0};b.prototype.clearMarkers=function(){this.resetViewport_(!0);this.markers_=[]};b.prototype.repaint=function(){var a=this.clusters_.slice();this.clusters_=[];this.resetViewport_(!1);this.redraw_();setTimeout(function(){var b;for(b=0;b<a.length;b++)a[b].remove()},0)};b.prototype.getExtendedBounds=function(a){var b=this.getProjection(),c=new google.maps.LatLng(a.getNorthEast().lat(),a.getNorthEast().lng()),d=new google.maps.LatLng(a.getSouthWest().lat(),
        a.getSouthWest().lng()),c=b.fromLatLngToDivPixel(c);c.x+=this.gridSize_;c.y-=this.gridSize_;d=b.fromLatLngToDivPixel(d);d.x-=this.gridSize_;d.y+=this.gridSize_;c=b.fromDivPixelToLatLng(c);b=b.fromDivPixelToLatLng(d);a.extend(c);a.extend(b);return a};b.prototype.redraw_=function(){this.createClusters_(0)};b.prototype.resetViewport_=function(a){var b,c;for(b=0;b<this.clusters_.length;b++)this.clusters_[b].remove();this.clusters_=[];for(b=0;b<this.markers_.length;b++)c=this.markers_[b],c.isAdded=!1,
    a&&c.setMap(null)};b.prototype.distanceBetweenPoints_=function(a,b){var c=(b.lat()-a.lat())*Math.PI/180,d=(b.lng()-a.lng())*Math.PI/180,c=Math.sin(c/2)*Math.sin(c/2)+Math.cos(a.lat()*Math.PI/180)*Math.cos(b.lat()*Math.PI/180)*Math.sin(d/2)*Math.sin(d/2);return 12742*Math.atan2(Math.sqrt(c),Math.sqrt(1-c))};b.prototype.isMarkerInBounds_=function(a,b){return b.contains(a.getPosition())};b.prototype.addToClosestCluster_=function(a){var b,c,d,g=4E4,f=null;for(b=0;b<this.clusters_.length;b++)if(d=this.clusters_[b],
            c=d.getCenter())c=this.distanceBetweenPoints_(c,a.getPosition()),c<g&&(g=c,f=d);f&&f.isMarkerInClusterBounds(a)?f.addMarker(a):(d=new e(this),d.addMarker(a),this.clusters_.push(d))};b.prototype.createClusters_=function(a){var b,c,d=this;if(this.ready_){0===a&&(google.maps.event.trigger(this,"clusteringbegin",this),"undefined"!==typeof this.timerRefStatic&&(clearTimeout(this.timerRefStatic),delete this.timerRefStatic));c=3<this.getMap().getZoom()?new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),
        this.getMap().getBounds().getNorthEast()):new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625));c=this.getExtendedBounds(c);for(var e=Math.min(a+this.batchSize_,this.markers_.length);a<e;a++)b=this.markers_[a],!b.isAdded&&this.isMarkerInBounds_(b,c)&&(!this.ignoreHidden_||this.ignoreHidden_&&b.getVisible())&&this.addToClosestCluster_(b);e<this.markers_.length?this.timerRefStatic=setTimeout(function(){d.createClusters_(e)},
        0):(delete this.timerRefStatic,google.maps.event.trigger(this,"clusteringend",this))}};b.prototype.extend=function(a,b){return function(a){for(var b in a.prototype)this.prototype[b]=a.prototype[b];return this}.apply(a,[b])};b.CALCULATOR=function(a,b){for(var c=0,d=a.length.toString(),e=d;0!==e;)e=parseInt(e/10,10),c++;c=Math.min(c,b);return{text:d,index:c,title:""}};b.BATCH_SIZE=2E3;b.BATCH_SIZE_IE=500;b.IMAGE_PATH="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclustererplus/images/m";
    b.IMAGE_EXTENSION="png";b.IMAGE_SIZES=[53,56,66,78,90];"function"!==typeof String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")});c(h,google.maps.OverlayView);h.getSharedCross=function(a){var b;"undefined"===typeof h.getSharedCross.crossDiv&&(b=document.createElement("img"),b.style.cssText="position: absolute; z-index: 1000002; display: none;",b.style.marginLeft="-8px",b.style.marginTop="-9px",b.src=a,h.getSharedCross.crossDiv=b);return h.getSharedCross.crossDiv};
    h.prototype.onAdd=function(){var a=this,b=!1,c=!1,d,e,g,f,p,u,l,v="url("+this.handCursorURL_+")",t=function(a){a.preventDefault&&a.preventDefault();a.cancelBubble=!0;a.stopPropagation&&a.stopPropagation()},w=function(){a.marker_.setAnimation(null)};this.getPanes().overlayImage.appendChild(this.labelDiv_);this.getPanes().overlayMouseTarget.appendChild(this.eventDiv_);"undefined"===typeof h.getSharedCross.processed&&(this.getPanes().overlayImage.appendChild(this.crossDiv_),h.getSharedCross.processed=
        !0);this.listeners_=[google.maps.event.addDomListener(this.eventDiv_,"mouseover",function(b){if(a.marker_.getDraggable()||a.marker_.getClickable())this.style.cursor="pointer",google.maps.event.trigger(a.marker_,"mouseover",b)}),google.maps.event.addDomListener(this.eventDiv_,"mouseout",function(b){!a.marker_.getDraggable()&&!a.marker_.getClickable()||c||(this.style.cursor=a.marker_.getCursor(),google.maps.event.trigger(a.marker_,"mouseout",b))}),google.maps.event.addDomListener(this.eventDiv_,"mousedown",
        function(d){c=!1;a.marker_.getDraggable()&&(b=!0,this.style.cursor=v);if(a.marker_.getDraggable()||a.marker_.getClickable())google.maps.event.trigger(a.marker_,"mousedown",d),t(d)}),google.maps.event.addDomListener(document,"mouseup",function(e){var g;b&&(b=!1,a.eventDiv_.style.cursor="pointer",google.maps.event.trigger(a.marker_,"mouseup",e));if(c){if(p){g=a.getProjection().fromLatLngToDivPixel(a.marker_.getPosition());g.y+=20;a.marker_.setPosition(a.getProjection().fromDivPixelToLatLng(g));try{a.marker_.setAnimation(google.maps.Animation.BOUNCE),
        setTimeout(w,1406)}catch(h){}}a.crossDiv_.style.display="none";a.marker_.setZIndex(d);f=!0;c=!1;e.latLng=a.marker_.getPosition();google.maps.event.trigger(a.marker_,"dragend",e)}}),google.maps.event.addListener(a.marker_.getMap(),"mousemove",function(f){var h;b&&(c?(f.latLng=new google.maps.LatLng(f.latLng.lat()-e,f.latLng.lng()-g),h=a.getProjection().fromLatLngToDivPixel(f.latLng),p&&(a.crossDiv_.style.left=h.x+"px",a.crossDiv_.style.top=h.y+"px",a.crossDiv_.style.display="",h.y-=20),a.marker_.setPosition(a.getProjection().fromDivPixelToLatLng(h)),
    p&&(a.eventDiv_.style.top=h.y+20+"px"),google.maps.event.trigger(a.marker_,"drag",f)):(e=f.latLng.lat()-a.marker_.getPosition().lat(),g=f.latLng.lng()-a.marker_.getPosition().lng(),d=a.marker_.getZIndex(),u=a.marker_.getPosition(),l=a.marker_.getMap().getCenter(),p=a.marker_.get("raiseOnDrag"),c=!0,a.marker_.setZIndex(1E6),f.latLng=a.marker_.getPosition(),google.maps.event.trigger(a.marker_,"dragstart",f)))}),google.maps.event.addDomListener(document,"keydown",function(b){c&&27===b.keyCode&&(p=!1,
        a.marker_.setPosition(u),a.marker_.getMap().setCenter(l),google.maps.event.trigger(document,"mouseup",b))}),google.maps.event.addDomListener(this.eventDiv_,"click",function(b){if(a.marker_.getDraggable()||a.marker_.getClickable())f?f=!1:(google.maps.event.trigger(a.marker_,"click",b),t(b))}),google.maps.event.addDomListener(this.eventDiv_,"dblclick",function(b){if(a.marker_.getDraggable()||a.marker_.getClickable())google.maps.event.trigger(a.marker_,"dblclick",b),t(b)}),google.maps.event.addListener(this.marker_,
        "dragstart",function(a){c||(p=this.get("raiseOnDrag"))}),google.maps.event.addListener(this.marker_,"drag",function(b){!c&&p&&(a.setPosition(20),a.labelDiv_.style.zIndex=1E6+(this.get("labelInBackground")?-1:1))}),google.maps.event.addListener(this.marker_,"dragend",function(b){c||p&&a.setPosition(0)}),google.maps.event.addListener(this.marker_,"position_changed",function(){a.setPosition()}),google.maps.event.addListener(this.marker_,"zindex_changed",function(){a.setZIndex()}),google.maps.event.addListener(this.marker_,
        "visible_changed",function(){a.setVisible()}),google.maps.event.addListener(this.marker_,"labelvisible_changed",function(){a.setVisible()}),google.maps.event.addListener(this.marker_,"title_changed",function(){a.setTitle()}),google.maps.event.addListener(this.marker_,"labelcontent_changed",function(){a.setContent()}),google.maps.event.addListener(this.marker_,"labelanchor_changed",function(){a.setAnchor()}),google.maps.event.addListener(this.marker_,"labelclass_changed",function(){a.setStyles()}),
        google.maps.event.addListener(this.marker_,"labelstyle_changed",function(){a.setStyles()})]};h.prototype.onRemove=function(){var a;null!==this.labelDiv_.parentNode&&this.labelDiv_.parentNode.removeChild(this.labelDiv_);null!==this.eventDiv_.parentNode&&this.eventDiv_.parentNode.removeChild(this.eventDiv_);for(a=0;a<this.listeners_.length;a++)google.maps.event.removeListener(this.listeners_[a])};h.prototype.draw=function(){this.setContent();this.setTitle();this.setStyles()};h.prototype.setContent=
        function(){var a=this.marker_.get("labelContent");"undefined"===typeof a.nodeType?(this.labelDiv_.innerHTML=a,this.eventDiv_.innerHTML=this.labelDiv_.innerHTML):(this.labelDiv_.innerHTML="",this.labelDiv_.appendChild(a),a=a.cloneNode(!0),this.eventDiv_.appendChild(a))};h.prototype.setTitle=function(){this.eventDiv_.title=this.marker_.getTitle()||""};h.prototype.setStyles=function(){var a,b;this.labelDiv_.className=this.marker_.get("labelClass");this.eventDiv_.className=this.labelDiv_.className;this.labelDiv_.style.cssText=
        "";this.eventDiv_.style.cssText="";b=this.marker_.get("labelStyle");for(a in b)b.hasOwnProperty(a)&&(this.labelDiv_.style[a]=b[a],this.eventDiv_.style[a]=b[a]);this.setMandatoryStyles()};h.prototype.setMandatoryStyles=function(){this.labelDiv_.style.position="absolute";this.labelDiv_.style.overflow="hidden";"undefined"!==typeof this.labelDiv_.style.opacity&&""!==this.labelDiv_.style.opacity&&(this.labelDiv_.style.MsFilter='"progid:DXImageTransform.Microsoft.Alpha(opacity='+100*this.labelDiv_.style.opacity+
    ')"',this.labelDiv_.style.filter="alpha(opacity="+100*this.labelDiv_.style.opacity+")");this.eventDiv_.style.position=this.labelDiv_.style.position;this.eventDiv_.style.overflow=this.labelDiv_.style.overflow;this.eventDiv_.style.opacity=.01;this.eventDiv_.style.MsFilter='"progid:DXImageTransform.Microsoft.Alpha(opacity=1)"';this.eventDiv_.style.filter="alpha(opacity=1)";this.setAnchor();this.setPosition();this.setVisible()};h.prototype.setAnchor=function(){var a=this.marker_.get("labelAnchor");this.labelDiv_.style.marginLeft=
        -a.x+"px";this.labelDiv_.style.marginTop=-a.y+"px";this.eventDiv_.style.marginLeft=-a.x+"px";this.eventDiv_.style.marginTop=-a.y+"px"};h.prototype.setPosition=function(a){var b=this.getProjection().fromLatLngToDivPixel(this.marker_.getPosition());"undefined"===typeof a&&(a=0);this.labelDiv_.style.left=Math.round(b.x)+"px";this.labelDiv_.style.top=Math.round(b.y-a)+"px";this.eventDiv_.style.left=this.labelDiv_.style.left;this.eventDiv_.style.top=this.labelDiv_.style.top;this.setZIndex()};h.prototype.setZIndex=
        function(){var a=this.marker_.get("labelInBackground")?-1:1;"undefined"===typeof this.marker_.getZIndex()?this.labelDiv_.style.zIndex=parseInt(this.labelDiv_.style.top,10)+a:this.labelDiv_.style.zIndex=this.marker_.getZIndex()+a;this.eventDiv_.style.zIndex=this.labelDiv_.style.zIndex};h.prototype.setVisible=function(){this.marker_.get("labelVisible")?this.labelDiv_.style.display=this.marker_.getVisible()?"block":"none":this.labelDiv_.style.display="none";this.eventDiv_.style.display=this.labelDiv_.style.display};
    c(g,google.maps.Marker);g.prototype.setMap=function(a){google.maps.Marker.prototype.setMap.apply(this,arguments);this.label.setMap(a)};window.InfoBox=d;window.Cluster=e;window.ClusterIcon=f;window.MarkerClusterer=b;window.MarkerLabel_=h;window.MarkerWithLabel=g})}});
angular.module("google-maps.extensions".ns()).service("ExtendMarkerClusterer".ns(),function(){return{init:_.once(function(){(function(){var d={}.hasOwnProperty,f=function(e,b){function c(){this.constructor=e}for(var f in b)d.call(b,f)&&(e[f]=b[f]);c.prototype=b.prototype;e.prototype=new c;e.__super__=b.prototype;return e};window.NgMapCluster=function(d){function b(c){b.__super__.constructor.call(this,c);this.markers_=new window.PropMap}f(b,d);b.prototype.addMarker=function(b){var d,e;if(this.isMarkerAlreadyAdded_(b)&&
    (d=this.markers_.get(b.key),d.getPosition().lat()==b.getPosition().lat()&&d.getPosition().lon()==b.getPosition().lon()))return!1;this.center_?this.averageCenter_&&(e=this.markers_.length+1,d=(this.center_.lat()*(e-1)+b.getPosition().lat())/e,e=(this.center_.lng()*(e-1)+b.getPosition().lng())/e,this.center_=new google.maps.LatLng(d,e),this.calculateBounds_()):(this.center_=b.getPosition(),this.calculateBounds_());b.isAdded=!0;this.markers_.push(b);d=this.markers_.length;e=this.markerClusterer_.getMaxZoom();
    null!==e&&this.map_.getZoom()>e?b.getMap()!==this.map_&&b.setMap(this.map_):d<this.minClusterSize_?b.getMap()!==this.map_&&b.setMap(this.map_):d===this.minClusterSize_?this.markers_.values().forEach(function(a){a.setMap(null)}):b.setMap(null);return!0};b.prototype.isMarkerAlreadyAdded_=function(b){return _.isNullOrUndefined(this.markers_.get(b.key))};b.prototype.getBounds=function(){var b,d=new google.maps.LatLngBounds(this.center_,this.center_),e=this.getMarkers().values();for(b=0;b<e.length;b++)d.extend(e[b].getPosition());
    return d};b.prototype.remove=function(){this.clusterIcon_.setMap(null);this.markers_=new PropMap;delete this.markers_};return b}(Cluster);window.NgMapMarkerClusterer=function(d){function b(c,d,e){b.__super__.constructor.call(this,c,d,e);this.markers_=new window.PropMap}f(b,d);b.prototype.clearMarkers=function(){this.resetViewport_(!0);this.markers_=new PropMap};b.prototype.removeMarker_=function(b){if(!this.markers_.get(b.key))return!1;b.setMap(null);this.markers_.remove(b.key);return!0};b.prototype.createClusters_=
    function(b){var d,e,a=this;if(this.ready_){0===b&&(google.maps.event.trigger(this,"clusteringbegin",this),"undefined"!==typeof this.timerRefStatic&&(clearTimeout(this.timerRefStatic),delete this.timerRefStatic));e=3<this.getMap().getZoom()?new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),this.getMap().getBounds().getNorthEast()):new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625));e=
        this.getExtendedBounds(e);for(var f=Math.min(b+this.batchSize_,this.markers_.length);b<f;b++)d=this.markers_.values()[b],!d.isAdded&&this.isMarkerInBounds_(d,e)&&(!this.ignoreHidden_||this.ignoreHidden_&&d.getVisible())&&this.addToClosestCluster_(d);if(f<this.markers_.length)this.timerRefStatic=setTimeout(function(){a.createClusters_(f)},0);else{for(b=0;b<this.clusters_.length;b++)this.clusters_[b].updateIcon_();delete this.timerRefStatic;google.maps.event.trigger(this,"clusteringend",this)}}};b.prototype.addToClosestCluster_=
    function(b){var d,e,a,f=4E4,m=null;for(d=0;d<this.clusters_.length;d++)if(a=this.clusters_[d],e=a.getCenter())e=this.distanceBetweenPoints_(e,b.getPosition()),e<f&&(f=e,m=a);m&&m.isMarkerInClusterBounds(b)?m.addMarker(b):(a=new NgMapCluster(this),a.addMarker(b),this.clusters_.push(a))};b.prototype.redraw_=function(){this.createClusters_(0)};b.prototype.resetViewport_=function(b){var d;for(d=0;d<this.clusters_.length;d++)this.clusters_[d].remove();this.clusters_=[];this.markers_.values().forEach(function(d){d.isAdded=
    !1;b&&d.setMap(null)})};b.prototype.extend=function(b,d){return function(b){for(var a in b.prototype)"constructor"!==a&&(this.prototype[a]=b.prototype[a]);return this}.apply(b,[d])};return b}(MarkerClusterer)}).call(this)})}});